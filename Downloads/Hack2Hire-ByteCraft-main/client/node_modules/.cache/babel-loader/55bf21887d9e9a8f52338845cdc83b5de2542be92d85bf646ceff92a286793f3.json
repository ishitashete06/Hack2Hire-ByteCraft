{"ast":null,"code":"import { Point } from \"./Point.js\";\n/**\n * @internal\n */\nexport const Line = /* @__PURE__ */(() => {\n  /**\n   * @internal\n   */\n  function Line(a, b) {\n    return {\n      a,\n      b\n    };\n  }\n  Line.intersection = (lineA, lineB) => {\n    const x1 = lineA.a.x;\n    const y1 = lineA.a.y;\n    const x2 = lineA.b.x;\n    const y2 = lineA.b.y;\n    const x3 = lineB.a.x;\n    const y3 = lineB.a.y;\n    const x4 = lineB.b.x;\n    const y4 = lineB.b.y;\n    const d = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n    if (d === 0) {\n      return null;\n    }\n    const xi = ((x3 - x4) * (x1 * y2 - y1 * x2) - (x1 - x2) * (x3 * y4 - y3 * x4)) / d;\n    const yi = ((y3 - y4) * (x1 * y2 - y1 * x2) - (y1 - y2) * (x3 * y4 - y3 * x4)) / d;\n    return {\n      x: xi,\n      y: yi\n    };\n  };\n  Line.intersectionAngle = (lineA, lineB) => {\n    const deltaAX = lineA.b.x - lineA.a.x;\n    const deltaAY = lineA.b.y - lineA.a.y;\n    const deltaBX = lineB.b.x - lineB.a.x;\n    const deltaBY = lineB.b.y - lineB.a.y;\n    const angle = Math.atan2(deltaAX * deltaBY - deltaAY * deltaBX, deltaAX * deltaBX + deltaAY * deltaBY);\n    return angle * (180 / Math.PI);\n  };\n  Line.isOrthogonal = line => {\n    return line.a.x === line.b.x || line.a.y === line.b.y;\n  };\n  Line.perpendicular = (line, pointOnLine) => {\n    const deltaX = line.a.x - line.b.x;\n    const deltaY = line.a.y - line.b.y;\n    const pointB = Point(pointOnLine.x - deltaY, pointOnLine.y + deltaX);\n    return Line(pointB, pointOnLine);\n  };\n  Line.projectPoint = (line, point) => {\n    const perp = Line.perpendicular(line, point);\n    return Line.intersection(line, perp);\n  };\n  Line.pointAtPercentDistance = (line, distance) => {\n    const hypotenuse = Line.distance(line);\n    const r = distance * hypotenuse / hypotenuse;\n    return {\n      x: r * line.b.x + (1 - r) * line.a.x,\n      y: r * line.b.y + (1 - r) * line.a.y\n    };\n  };\n  Line.distance = line => {\n    return Point.distance(line.a, line.b);\n  };\n  return Line;\n})();","map":{"version":3,"names":["Point","Line","a","b","intersection","lineA","lineB","x1","x","y1","y","x2","y2","x3","y3","x4","y4","d","xi","yi","intersectionAngle","deltaAX","deltaAY","deltaBX","deltaBY","angle","Math","atan2","PI","isOrthogonal","line","perpendicular","pointOnLine","deltaX","deltaY","pointB","projectPoint","point","perp","pointAtPercentDistance","distance","hypotenuse","r"],"sources":["../../../src/render/types/Line.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}