{"ast":null,"code":"import { frame, useDragControls, useMotionValue } from \"framer-motion\";\nimport React, { useCallback, useMemo, useRef } from \"react\";\nimport { FrameWithMotion } from \"../../render/presentation/Frame/FrameWithMotion.js\";\nimport { RenderTarget } from \"../../render/types/RenderEnvironment.js\";\nimport { injectComponentCSSRules } from \"../../render/utils/injectComponentCSSRules.js\";\nimport { isFiniteNumber } from \"../../render/utils/isFiniteNumber.js\";\nimport { isMotionValue } from \"../../render/utils/isMotionValue.js\";\nimport { useLayoutId } from \"../../render/utils/useLayoutId.js\";\nimport { useIsomorphicLayoutEffect } from \"../../useIsomorphicLayoutEffect.js\";\nimport { EmptyState } from \"../EmptyState.js\";\nimport { useIsInCurrentNavigationTarget } from \"../NavigationContainerContext.js\";\nimport { useWheelScroll } from \"./useWheelScroll.js\";\nconst directionMap = {\n  horizontal: \"x\",\n  vertical: \"y\",\n  both: true\n};\nfunction convertScrollDirectionToDrag(scrollDirection) {\n  return scrollDirection ? directionMap[scrollDirection] : scrollDirection;\n}\nconst useUpdateChildSize = ({\n  dragDirection,\n  children,\n  fromCanvasComponent\n}) => {\n  return useMemo(() => {\n    return React.Children.map(children, child => {\n      if (child === null || typeof child !== \"object\" || typeof child.type === \"string\") {\n        return child;\n      }\n      const updatedSize = {};\n      switch (dragDirection) {\n        case \"vertical\":\n          updatedSize.width = \"100%\";\n          break;\n        case \"horizontal\":\n          updatedSize.height = \"100%\";\n          break;\n        default:\n          return child;\n      }\n      const update = fromCanvasComponent ? {\n        style: Object.assign({}, child.props.style, updatedSize)\n      } : updatedSize;\n      return React.cloneElement(child, update);\n    });\n  }, [dragDirection, children]);\n};\nconst numberFromOptionalMotionValue = value => {\n  return typeof value === \"number\" ? value : value.get();\n};\n/**\n * @private\n */\nexport const EmulatedScroll = /* @__PURE__ */React.forwardRef(function EmulatedScroll(props, forwardedRef) {\n  const {\n    direction = \"vertical\",\n    directionLock = false,\n    dragEnabled = true,\n    dragElastic,\n    dragMomentum,\n    dragTransition,\n    wheelEnabled = true,\n    contentOffsetX = 0,\n    contentOffsetY = 0,\n    contentWidth,\n    contentHeight,\n    onScrollStart,\n    onScroll,\n    onScrollEnd,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    onUpdate,\n    onDirectionLock,\n    style,\n    children,\n    scrollAnimate,\n    resetOffset,\n    overdragEnabled = true,\n    layoutId: specificLayoutId,\n    native,\n    ...containerProps\n  } = props;\n  const layoutId = useLayoutId(props, {\n    specificLayoutId,\n    postfix: \"scroll\"\n  });\n  const defaultX = useMotionValue(typeof contentOffsetX === \"number\" ? contentOffsetX : 0);\n  const defaultY = useMotionValue(typeof contentOffsetY === \"number\" ? contentOffsetY : 0);\n  const x = isMotionValue(contentOffsetX) ? contentOffsetX : defaultX;\n  const y = isMotionValue(contentOffsetY) ? contentOffsetY : defaultY;\n  const measuredConstraints = useRef(null);\n  const dragControls = useDragControls();\n  const isInTarget = useIsInCurrentNavigationTarget();\n  const wasInTargetRef = useRef(true);\n  injectComponentCSSRules();\n  function setMeasureDragConstraints(constraints) {\n    constraints = offsetToZero(constraints);\n    if (contentWidth !== undefined) constraints.left = -contentWidth;\n    if (contentHeight !== undefined) constraints.top = -contentHeight;\n    return measuredConstraints.current = constraints;\n  }\n  const {\n    initial,\n    prev\n  } = useRef({\n    initial: {\n      x: 0,\n      y: 0\n    },\n    prev: {\n      x: 0,\n      y: 0\n    }\n  }).current;\n  const isPreview = RenderTarget.current() === RenderTarget.preview;\n  const containerFallbackRef = useRef(null);\n  const containerRef = forwardedRef || containerFallbackRef;\n  const contentRef = useRef(null);\n  const lastOffsetRef = useRef(null);\n  function shouldResetScroll(inTarget) {\n    const hasEnteredTarget = inTarget && wasInTargetRef.current === false;\n    return resetOffset && hasEnteredTarget;\n  }\n  function measureAndUpdateScrollOffset() {\n    if (!contentRef.current || !containerRef.current) return;\n    // If the component is flagged to reset its scroll offset to its initial\n    // values when it appears, check if the scroll was previously not\n    // visible, and has become visible, and if so flag that we must reset\n    // the scroll offset.\n    const mustReset = shouldResetScroll(isInTarget);\n    wasInTargetRef.current = isInTarget;\n    // If the offset properties are not set, we don't need to measure and\n    // update scroll offset.\n    const previous = lastOffsetRef.current;\n    if (previous === null && contentOffsetX === undefined && contentOffsetY === undefined) return;\n    // Check if the values of the offset props have changed, requiring\n    // scroll position to be updated. We only do this when the props are\n    // numbers, because if they are motionValues, the offset has already\n    // been changed by the motionValues themselves.\n    const shouldUpdateOffset = previous === null || !isMotionValue(contentOffsetX) && contentOffsetX !== previous.offsetX || !isMotionValue(contentOffsetY) && contentOffsetY !== previous.offsetY;\n    // Check if the new maximum scroll offset has changed as a result of the\n    // container or the scrollable content resizing.\n    const currentMaxXOffset = contentRef.current.offsetWidth - containerRef.current.offsetWidth;\n    const currentMaxYOffset = contentRef.current.offsetHeight - containerRef.current.offsetHeight;\n    const hasSizeChanged = currentMaxXOffset !== previous?.maxXOffset || currentMaxYOffset !== previous?.maxYOffset;\n    // Check if the actual scroll offset has changed via user interaction\n    // relative to the last offset set via this function.\n    const hasScrollOffsetChanged = previous?.x !== x.get() || previous?.y !== y.get();\n    // If the size has changed, but the user hasn't scrolled away from the\n    // last set scroll offset, we expect the resize not to result in an\n    // incorrect scroll position. For instance, the maximum scrollable size\n    // could shrink, meaning that a scroll offset that was previously\n    // acceptable now results in undesirable overscroll. In this case we\n    // need to reset to an acceptable offset.\n    const shouldStayPinned = hasSizeChanged && !hasScrollOffsetChanged;\n    if (mustReset || shouldUpdateOffset || shouldStayPinned) {\n      const currentOffsetX = direction !== \"vertical\" ? numberFromOptionalMotionValue(contentOffsetX) : 0;\n      const currentOffsetY = direction !== \"horizontal\" ? numberFromOptionalMotionValue(contentOffsetY) : 0;\n      const nextXOffset = -Math.min(currentOffsetX, currentMaxXOffset);\n      const nextYOffset = -Math.min(currentOffsetY, currentMaxYOffset);\n      x.set(nextXOffset);\n      y.set(nextYOffset);\n      lastOffsetRef.current = {\n        maxXOffset: currentMaxXOffset,\n        maxYOffset: currentMaxYOffset,\n        offsetX: currentOffsetX,\n        offsetY: currentOffsetY,\n        x: nextXOffset,\n        y: nextYOffset\n      };\n    }\n  }\n  // onBeforeLayoutMeasure is not called on the canvas, so handle updating\n  // scroll offset on the canvas on any update with a layout effect.\n  useIsomorphicLayoutEffect(() => {\n    if (RenderTarget.current() !== RenderTarget.canvas) return;\n    measureAndUpdateScrollOffset();\n  });\n  // onBeforeLayoutMeasure is not called on mount, so handle updating scroll\n  // on mount in the preview.\n  useIsomorphicLayoutEffect(() => {\n    if (RenderTarget.current() === RenderTarget.canvas) return;\n    measureAndUpdateScrollOffset();\n  }, []);\n  // isInTarget can change without motion calling measure on the element. To\n  // solve that case, we run an effect when isInTarget changes, and call\n  // measureAndUpdate if we need to reset. Since an effect runs after motion's\n  // measurements phase, this will only run if we haven't already reset during\n  // the render phase.\n  React.useEffect(() => {\n    if (shouldResetScroll(isInTarget)) measureAndUpdateScrollOffset();\n    // Always unset isInTarget to false on a change.\n    // measureAndUpdateScrollOffset may not be called when navigating off\n    // screen.\n    if (isInTarget === false) wasInTargetRef.current = false;\n  }, [isInTarget]);\n  const getLatestPoint = () => ({\n    x: x.get(),\n    y: y.get()\n  });\n  const resetInitialPoint = useCallback(() => {\n    const point = getLatestPoint();\n    initial.x = point.x;\n    initial.y = point.y;\n    prev.x = point.x;\n    prev.y = point.y;\n  }, []);\n  const getPointData = useCallback(() => {\n    const point = getLatestPoint();\n    const data = {\n      point,\n      velocity: {\n        x: x.getVelocity(),\n        y: y.getVelocity()\n      },\n      offset: {\n        x: point.x - initial.x,\n        y: point.y - initial.y\n      },\n      delta: {\n        x: point.x - prev.x,\n        y: point.y - prev.y\n      }\n    };\n    prev.x = point.x;\n    prev.y = point.y;\n    return data;\n  }, [x, y]);\n  const updateScrollListeners = useCallback(() => {\n    onUpdate && onUpdate({\n      x: x.get(),\n      y: y.get()\n    });\n    onScroll && onScroll(getPointData());\n  }, [onScroll, onUpdate, getPointData, x, y]);\n  const scheduleUpdateScrollListeners = useCallback(() => {\n    frame.update(updateScrollListeners, false, true);\n  }, [updateScrollListeners]);\n  const onMotionDragStart = (event, info) => {\n    resetInitialPoint();\n    onDragStart && onDragStart(event, info);\n    onScrollStart && onScrollStart(info);\n  };\n  const onMotionDragTransitionEnd = () => onScrollEnd && onScrollEnd(getPointData());\n  const onWheelScrollStart = info => {\n    onScrollStart?.(info);\n  };\n  useWheelScroll(containerRef, {\n    enabled: wheelEnabled,\n    initial,\n    prev,\n    direction,\n    offsetX: x,\n    offsetY: y,\n    onScrollStart: onWheelScrollStart,\n    onScroll,\n    onScrollEnd,\n    constraints: measuredConstraints\n  });\n  const overdragX = useMotionValue(0);\n  const overdragY = useMotionValue(0);\n  useIsomorphicLayoutEffect(() => {\n    const setScrollX = xValue => {\n      const element = containerRef.current;\n      if (!(element instanceof HTMLDivElement)) return;\n      element.scrollLeft = -xValue;\n      const constraints = measuredConstraints.current;\n      if (constraints && overdragEnabled) {\n        let overdragXValue = 0;\n        if (xValue > constraints.right) overdragXValue = xValue;\n        if (xValue < constraints.left) overdragXValue = xValue - constraints.left;\n        overdragX.set(overdragXValue);\n      }\n      scheduleUpdateScrollListeners();\n    };\n    const currentX = x.get();\n    if (currentX !== 0) setScrollX(currentX);\n    return x.on(\"change\", setScrollX);\n  }, [x, overdragX, scheduleUpdateScrollListeners, overdragEnabled]);\n  useIsomorphicLayoutEffect(() => {\n    const setScrollY = yValue => {\n      const element = containerRef.current;\n      if (!(element instanceof HTMLDivElement)) return;\n      element.scrollTop = -yValue;\n      const constraints = measuredConstraints.current;\n      if (constraints && overdragEnabled) {\n        let overdragYValue = 0;\n        if (yValue > constraints.bottom) overdragYValue = yValue;\n        if (yValue < constraints.top) overdragYValue = yValue - constraints.top;\n        overdragY.set(overdragYValue);\n      }\n      scheduleUpdateScrollListeners();\n    };\n    const currentY = y.get();\n    if (currentY !== 0) setScrollY(currentY);\n    return y.on(\"change\", setScrollY);\n  }, [y, overdragY, scheduleUpdateScrollListeners, overdragEnabled]);\n  const nativeOnScroll = React.useCallback(() => {\n    const element = containerRef.current;\n    if (!(element instanceof HTMLDivElement)) return;\n    // we ignore native scroll changes when we are dragging or finishing a drag animation\n    const xDelta = Math.abs(x.get() + element.scrollLeft);\n    const yDelta = Math.abs(y.get() + element.scrollTop);\n    if (xDelta > 1) x.set(-element.scrollLeft);\n    if (yDelta > 1) y.set(-element.scrollTop);\n  }, [x, y]);\n  const isEmpty = React.Children.count(children) === 0;\n  const width = direction !== \"vertical\" && !isEmpty ? \"auto\" : \"100%\";\n  const height = direction !== \"horizontal\" && !isEmpty ? \"auto\" : \"100%\";\n  const size = !containerProps.__fromCanvasComponent ? {\n    width: containerProps.__fromCodeComponentNode ? \"100%\" : containerProps.width,\n    height: containerProps.__fromCodeComponentNode ? \"100%\" : containerProps.height\n  } : {};\n  return React.createElement(FrameWithMotion, {\n    \"data-framer-component-type\": \"Scroll\",\n    background: \"none\" // need to set here to prevent default background from Frame\n    ,\n    ...containerProps,\n    ...size,\n    style: {\n      ...style,\n      willChange: isPreview ? \"transform\" : undefined,\n      overflow: \"hidden\"\n    },\n    onScroll: nativeOnScroll,\n    preserve3d: containerProps.preserve3d,\n    ref: containerRef,\n    layoutId: layoutId,\n    layoutScroll: true,\n    onBeforeLayoutMeasure: measureAndUpdateScrollOffset\n  }, React.createElement(FrameWithMotion, {\n    \"data-framer-component-type\": \"ScrollContentWrapper\",\n    animate: scrollAnimate,\n    drag: dragEnabled && convertScrollDirectionToDrag(direction),\n    dragDirectionLock: directionLock,\n    dragElastic: dragElastic,\n    dragMomentum: dragMomentum,\n    dragTransition: dragTransition,\n    dragConstraints: containerRef,\n    dragControls: dragControls,\n    onDragStart: onMotionDragStart,\n    onDrag: onDrag,\n    onDragEnd: onDragEnd,\n    onDragTransitionEnd: onMotionDragTransitionEnd,\n    onDirectionLock: onDirectionLock,\n    onMeasureDragConstraints: setMeasureDragConstraints,\n    width: width,\n    height: height,\n    _dragX: x,\n    _dragY: y,\n    position: \"relative\",\n    x: overdragEnabled ? overdragX : undefined,\n    y: overdragEnabled ? overdragY : undefined,\n    ref: contentRef,\n    style: {\n      display: isEmpty ? \"block\" : \"inline-block\",\n      willChange: isPreview ? \"transform\" : undefined,\n      backgroundColor: \"transparent\",\n      overflow: \"visible\",\n      minWidth: \"100%\",\n      minHeight: \"100%\"\n    },\n    preserve3d: containerProps.preserve3d\n  }, React.createElement(EmptyState, {\n    children: children,\n    size: {\n      width: isFiniteNumber(containerProps.width) ? containerProps.width : \"100%\",\n      height: isFiniteNumber(containerProps.height) ? containerProps.height : \"100%\"\n    },\n    insideUserCodeComponent: !containerProps.__fromCodeComponentNode,\n    title: \"Scroll\",\n    description: \"Click and drag the connector to any frame on the canvas \\u2192\"\n  }), useUpdateChildSize({\n    dragDirection: direction,\n    children,\n    fromCanvasComponent: containerProps.__fromCanvasComponent\n  })));\n});\n/**\n * Because we're overriding the usual drag x/y with scrollTop and scrollLeft\n * our constraints calculations need rebasing to 0\n */\nfunction offsetToZero({\n  top,\n  left,\n  right,\n  bottom\n}) {\n  const width = right - left;\n  const height = bottom - top;\n  return {\n    top: -height,\n    left: -width,\n    right: 0,\n    bottom: 0\n  };\n}","map":{"version":3,"names":["frame","useDragControls","useMotionValue","React","useCallback","useMemo","useRef","FrameWithMotion","RenderTarget","injectComponentCSSRules","isFiniteNumber","isMotionValue","useLayoutId","useIsomorphicLayoutEffect","EmptyState","useIsInCurrentNavigationTarget","useWheelScroll","directionMap","horizontal","vertical","both","convertScrollDirectionToDrag","scrollDirection","useUpdateChildSize","dragDirection","children","fromCanvasComponent","Children","map","child","type","updatedSize","width","height","update","style","Object","assign","props","cloneElement","numberFromOptionalMotionValue","value","get","EmulatedScroll","forwardRef","forwardedRef","direction","directionLock","dragEnabled","dragElastic","dragMomentum","dragTransition","wheelEnabled","contentOffsetX","contentOffsetY","contentWidth","contentHeight","onScrollStart","onScroll","onScrollEnd","onDragStart","onDrag","onDragEnd","onUpdate","onDirectionLock","scrollAnimate","resetOffset","overdragEnabled","layoutId","specificLayoutId","native","containerProps","postfix","defaultX","defaultY","x","y","measuredConstraints","dragControls","isInTarget","wasInTargetRef","setMeasureDragConstraints","constraints","offsetToZero","undefined","left","top","current","initial","prev","isPreview","preview","containerFallbackRef","containerRef","contentRef","lastOffsetRef","shouldResetScroll","inTarget","hasEnteredTarget","measureAndUpdateScrollOffset","mustReset","previous","shouldUpdateOffset","offsetX","offsetY","currentMaxXOffset","offsetWidth","currentMaxYOffset","offsetHeight","hasSizeChanged","maxXOffset","maxYOffset","hasScrollOffsetChanged","shouldStayPinned","currentOffsetX","currentOffsetY","nextXOffset","Math","min","nextYOffset","set","canvas","useEffect","getLatestPoint","resetInitialPoint","point","getPointData","data","velocity","getVelocity","offset","delta","updateScrollListeners","scheduleUpdateScrollListeners","onMotionDragStart","event","info","onMotionDragTransitionEnd","onWheelScrollStart","enabled","overdragX","overdragY","setScrollX","xValue","element","HTMLDivElement","scrollLeft","overdragXValue","right","currentX","on","setScrollY","yValue","scrollTop","overdragYValue","bottom","currentY","nativeOnScroll","xDelta","abs","yDelta","isEmpty","count","size","__fromCanvasComponent","__fromCodeComponentNode","createElement","background","willChange","overflow","preserve3d","ref","layoutScroll","onBeforeLayoutMeasure","animate","drag","dragDirectionLock","dragConstraints","onDragTransitionEnd","onMeasureDragConstraints","_dragX","_dragY","position","display","backgroundColor","minWidth","minHeight","insideUserCodeComponent","title","description"],"sources":["../../../src/components/Scroll/EmulatedScroll.tsx"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}