{"ast":null,"code":"import React, { useContext } from \"react\";\n/**\n * @internal\n */\nexport const NavigationContainerContext = React.createContext(true);\n/**\n * Used to know if a code component is a child of the current screen.\n * This can be useful for resetting timers or interactions that need to trigger on every navigation.\n * @public\n */\nexport function useIsInCurrentNavigationTarget() {\n  // isInCurrentNavigationTarget is `true` if the NavigationContainerContext at the root of each screen is the current screen.\n  const isInCurrentNavigationTarget = useContext(NavigationContainerContext);\n  return isInCurrentNavigationTarget;\n}","map":{"version":3,"names":["React","useContext","NavigationContainerContext","createContext","useIsInCurrentNavigationTarget","isInCurrentNavigationTarget"],"sources":["../../src/components/NavigationContainerContext.tsx"],"sourcesContent":[null],"mappings":"AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AAEzC;;;AAGA,OAAO,MAAMC,0BAA0B,GAAGF,KAAK,CAACG,aAAa,CAAU,IAAI,CAAC;AAE5E;;;;;AAKA,OAAM,SAAUC,8BAA8BA,CAAA;EAC1C;EACA,MAAMC,2BAA2B,GAAGJ,UAAU,CAACC,0BAA0B,CAAC;EAE1E,OAAOG,2BAA2B;AACtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}