{"ast":null,"code":"/**\n * @internal\n */\nexport function minZoomForPixelatedImageRendering(image, containerSize, devicePixelRatio = 1) {\n  let {\n    width: frameWidth,\n    height: frameHeight\n  } = containerSize;\n  const imageWidth = image.pixelWidth ?? image.intrinsicWidth ?? 0;\n  const imageHeight = image.pixelHeight ?? image.intrinsicHeight ?? 0;\n  // Don't pixelate for nonsensical frames or images\n  if (frameWidth < 1 || frameHeight < 1 || imageWidth < 1 || imageHeight < 1) {\n    return undefined;\n  }\n  // Account for device pixel density\n  frameWidth *= devicePixelRatio;\n  frameHeight *= devicePixelRatio;\n  // At what zoom level do the image's pixels match 1:1 with a render of the image within the frame?\n  const frameAspectRatio = frameWidth / frameHeight;\n  const imageAspectRatio = imageWidth / imageHeight;\n  switch (image.fit) {\n    case \"fill\":\n      if (imageAspectRatio > frameAspectRatio) {\n        // Width will be cut off, height determines pixelation\n        return imageHeight / frameHeight;\n      } else {\n        // Height will be cut off, width determines pixelation\n        return imageWidth / frameWidth;\n      }\n    case \"fit\":\n    case \"stretch\":\n      // Pixelate once both image dimensions exceed frame size\n      return Math.max(imageWidth / frameWidth, imageHeight / frameHeight);\n  }\n}\n/**\n * @internal\n */\nexport function imageRenderingForZoom(zoom, minPixelatedZoom) {\n  if (minPixelatedZoom && Math.max(1, zoom) > minPixelatedZoom) {\n    return \"pixelated\";\n  }\n  return \"auto\";\n}","map":{"version":3,"names":["minZoomForPixelatedImageRendering","image","containerSize","devicePixelRatio","width","frameWidth","height","frameHeight","imageWidth","pixelWidth","intrinsicWidth","imageHeight","pixelHeight","intrinsicHeight","undefined","frameAspectRatio","imageAspectRatio","fit","Math","max","imageRenderingForZoom","zoom","minPixelatedZoom"],"sources":["../../../src/render/utils/imageRendering.ts"],"sourcesContent":[null],"mappings":"AAGA;;;AAGA,OAAM,SAAUA,iCAAiCA,CAC7CC,KAAsB,EACtBC,aAAmB,EACnBC,gBAAgB,GAAG,CAAC;EAEpB,IAAI;IAAEC,KAAK,EAAEC,UAAU;IAAEC,MAAM,EAAEC;EAAW,CAAE,GAAGL,aAAa;EAE9D,MAAMM,UAAU,GAAGP,KAAK,CAACQ,UAAU,IAAIR,KAAK,CAACS,cAAc,IAAI,CAAC;EAChE,MAAMC,WAAW,GAAGV,KAAK,CAACW,WAAW,IAAIX,KAAK,CAACY,eAAe,IAAI,CAAC;EAEnE;EACA,IAAIR,UAAU,GAAG,CAAC,IAAIE,WAAW,GAAG,CAAC,IAAIC,UAAU,GAAG,CAAC,IAAIG,WAAW,GAAG,CAAC,EAAE;IACxE,OAAOG,SAAS;;EAGpB;EACAT,UAAU,IAAIF,gBAAgB;EAC9BI,WAAW,IAAIJ,gBAAgB;EAE/B;EACA,MAAMY,gBAAgB,GAAGV,UAAU,GAAGE,WAAW;EACjD,MAAMS,gBAAgB,GAAGR,UAAU,GAAGG,WAAW;EAEjD,QAAQV,KAAK,CAACgB,GAAG;IACb,KAAK,MAAM;MACP,IAAID,gBAAgB,GAAGD,gBAAgB,EAAE;QACrC;QACA,OAAOJ,WAAW,GAAGJ,WAAW;OACnC,MAAM;QACH;QACA,OAAOC,UAAU,GAAGH,UAAU;;IAEtC,KAAK,KAAK;IACV,KAAK,SAAS;MACV;MACA,OAAOa,IAAI,CAACC,GAAG,CAACX,UAAU,GAAGH,UAAU,EAAEM,WAAW,GAAGJ,WAAW,CAAC;;AAE/E;AAEA;;;AAGA,OAAM,SAAUa,qBAAqBA,CAACC,IAAY,EAAEC,gBAAoC;EACpF,IAAIA,gBAAgB,IAAIJ,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEE,IAAI,CAAC,GAAGC,gBAAgB,EAAE;IAC1D,OAAO,WAAW;;EAEtB,OAAO,MAAM;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}