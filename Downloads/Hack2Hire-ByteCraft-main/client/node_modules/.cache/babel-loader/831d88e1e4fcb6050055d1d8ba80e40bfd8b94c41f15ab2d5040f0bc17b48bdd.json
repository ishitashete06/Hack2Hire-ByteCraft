{"ast":null,"code":"import { animateValue, frame } from \"framer-motion\";\nvar AnimationPhase;\n(function (AnimationPhase) {\n  AnimationPhase[AnimationPhase[\"None\"] = 0] = \"None\";\n  AnimationPhase[AnimationPhase[\"Running\"] = 1] = \"Running\";\n  AnimationPhase[AnimationPhase[\"Completed\"] = 2] = \"Completed\";\n  AnimationPhase[AnimationPhase[\"Cancelled\"] = 3] = \"Cancelled\";\n})(AnimationPhase || (AnimationPhase = {}));\nfunction isRunningAnimation(...phases) {\n  let runningAny = false;\n  let cancelledAny = false;\n  phases.forEach(phase => {\n    runningAny = runningAny || phase === AnimationPhase.Running;\n    cancelledAny = cancelledAny || phase === AnimationPhase.Cancelled;\n  });\n  return runningAny && !cancelledAny;\n}\nfunction didFinishAnimations(...phases) {\n  return phases.every(phase => phase === AnimationPhase.None || phase === AnimationPhase.Completed);\n}\nconst timeConstant = 400;\nexport function animatePointWithInertia({\n  from,\n  velocity,\n  onUpdate,\n  onComplete,\n  onStop\n}) {\n  const latest = from;\n  let animationPhaseX = AnimationPhase.None;\n  let animationPhaseY = AnimationPhase.None;\n  const animations = [];\n  const updateHandler = () => {\n    if (isRunningAnimation(animationPhaseX, animationPhaseY)) {\n      onUpdate(latest);\n    }\n  };\n  const completionHandler = () => {\n    if (didFinishAnimations(animationPhaseX, animationPhaseY)) {\n      onComplete();\n    }\n  };\n  if (velocity.x) {\n    animationPhaseX = AnimationPhase.Running;\n    animations.push(animateValue({\n      keyframes: [from.x],\n      velocity: -velocity.x,\n      timeConstant,\n      onUpdate: value => {\n        latest.x = value;\n        frame.update(updateHandler, false, true);\n      },\n      onComplete: () => {\n        if (animationPhaseX !== AnimationPhase.Running) {\n          throw Error(\"animation x should be running when completing\");\n        }\n        animationPhaseX = AnimationPhase.Completed;\n        completionHandler();\n      }\n    }));\n  }\n  if (velocity.y) {\n    animationPhaseY = AnimationPhase.Running;\n    animations.push(animateValue({\n      keyframes: [from.y],\n      velocity: -velocity.y,\n      timeConstant,\n      onUpdate: value => {\n        latest.y = value;\n        frame.update(updateHandler, false, true);\n      },\n      onComplete: () => {\n        if (animationPhaseY !== AnimationPhase.Running) {\n          throw Error(\"animation y should be running when completing\");\n        }\n        animationPhaseY = AnimationPhase.Completed;\n        completionHandler();\n      }\n    }));\n  }\n  if (!isRunningAnimation(animationPhaseX, animationPhaseY)) {\n    completionHandler();\n  }\n  return {\n    stop: () => {\n      if (!isRunningAnimation(animationPhaseX, animationPhaseY)) return;\n      animations.forEach(animation => animation.stop());\n      animationPhaseX = animationPhaseX === AnimationPhase.Running ? AnimationPhase.Cancelled : animationPhaseX;\n      animationPhaseY = animationPhaseY === AnimationPhase.Running ? AnimationPhase.Cancelled : animationPhaseY;\n      onStop();\n    }\n  };\n}","map":{"version":3,"names":["animateValue","frame","AnimationPhase","isRunningAnimation","phases","runningAny","cancelledAny","forEach","phase","Running","Cancelled","didFinishAnimations","every","None","Completed","timeConstant","animatePointWithInertia","from","velocity","onUpdate","onComplete","onStop","latest","animationPhaseX","animationPhaseY","animations","updateHandler","completionHandler","x","push","keyframes","value","update","Error","y","stop","animation"],"sources":["../../../src/components/utils/animatePointWithInertia.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}