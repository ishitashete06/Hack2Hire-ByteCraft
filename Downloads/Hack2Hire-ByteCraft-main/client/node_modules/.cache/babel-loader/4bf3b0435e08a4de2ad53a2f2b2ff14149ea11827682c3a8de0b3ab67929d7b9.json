{"ast":null,"code":"import { ResizeObserver as ResizeObserverPolyfill } from \"@juggle/resize-observer\";\nimport React, { useEffect } from \"react\";\nimport { useForceUpdate } from \"../../modules/useForceUpdate.js\";\nimport { useIsomorphicLayoutEffect } from \"../../useIsomorphicLayoutEffect.js\";\nimport { isBrowser } from \"../../utils/environment.js\";\nimport { safeWindow } from \"../../utils/safeWindow.js\";\nconst DEFAULT_SIZE = 200;\nclass SharedObserver {\n  #sharedResizeObserver;\n  #callbacks = new WeakMap();\n  constructor() {\n    const ResizeObserver = safeWindow.ResizeObserver ?? ResizeObserverPolyfill;\n    this.#sharedResizeObserver = new ResizeObserver(this.updateResizedElements.bind(this));\n  }\n  updateResizedElements(entries) {\n    for (const entry of entries) {\n      const callbackForElement = this.#callbacks.get(entry.target);\n      if (callbackForElement) callbackForElement(entry.contentRect);\n    }\n  }\n  observeElementWithCallback(element, callback) {\n    this.#sharedResizeObserver.observe(element);\n    this.#callbacks.set(element, callback);\n  }\n  unobserve(element) {\n    this.#sharedResizeObserver.unobserve(element);\n    this.#callbacks.delete(element);\n  }\n}\nconst sharedResizeObserver = isBrowser() ? new SharedObserver() : undefined;\nexport function useRerenderOnResize(ref) {\n  const update = useForceUpdate();\n  useEffect(() => {\n    const element = ref?.current;\n    if (!element) return;\n    sharedResizeObserver?.observeElementWithCallback(ref.current, update);\n    return () => {\n      sharedResizeObserver?.unobserve(element);\n    };\n  }, [ref, update]);\n}\n/**\n * Uses a globally shared resize observer, and returns an updated\n * size object when the element's size changes. This is the recommended way to\n * use a Resize Observer: https://github.com/WICG/resize-observer/issues/59.\n */\nfunction useMeasuredSize(ref) {\n  const forceUpdate = useForceUpdate();\n  const size = React.useRef(null);\n  function updateSize(newSize) {\n    // Ignore 0 entries, usually indicative of an element that is hidden, or\n    // nested inside a hidden element. This is common on the canvas where\n    // elements out of the viewport will be contained in an element with\n    // `display: none`. We could technically check the bounding client rect\n    // to make sure the element isn't visible, but that would force a style\n    // recalc and negate any performance benefits of skipping the update\n    if (newSize.width === 0 && newSize.height === 0) return;\n    if (!size.current || newSize.height !== size.current.height || newSize.width !== size.current.width) {\n      size.current = {\n        width: newSize.width,\n        height: newSize.height\n      };\n      forceUpdate();\n    }\n  }\n  // On mount, immediately measure and set a size. This will defer paint until\n  // no more updates are scheduled. Additionally add our element to the shared\n  // ResizeObserver with a callback to perform when the element resizes.\n  // Finally, remove the element from the observer when the component is unmounted.\n  useIsomorphicLayoutEffect(() => {\n    if (!ref.current) return;\n    const {\n      offsetWidth,\n      offsetHeight\n    } = ref.current;\n    // Defer paint until initial size is added.\n    updateSize({\n      width: offsetWidth,\n      height: offsetHeight\n    });\n    // Resize observer will race to add the initial size, but since the size\n    // is set above, it won't trigger a render on mount since it should\n    // match the measured size. Future executions of the callback will\n    // trigger renders if the size changes.\n    sharedResizeObserver.observeElementWithCallback(ref.current, updateSize);\n    return () => {\n      if (!ref.current) return;\n      sharedResizeObserver.unobserve(ref.current);\n    };\n  }, []);\n  return size.current;\n}\n/**\n * @internal\n */\nexport const SIZE_COMPATIBILITY_WRAPPER_ATTRIBUTE = \"data-framer-size-compatibility-wrapper\";\n/**\n * A HoC to enhance code components that depend on being rendered with exact\n * width and height props with width and height props determined via a shared\n * ResizeObserver.\n *\n * @FIXME Do not depend on this HoC. The current plan is to turn it into a no-op\n * after a deprecation period. If we need to provide this functionality to\n * customers after we migrate to a modules-first ecosystem, then we can provide\n * a new copy of this HoC or the `useMeasuredSize` hook, and recommend use\n * without a module version, allowing everyone to share the same ResizeObserver\n * on a single canvas.\n *\n * @internal\n */\nexport const withMeasuredSize = Component => props => {\n  const ref = React.useRef(null);\n  const size = useMeasuredSize(ref);\n  const dataProps = {\n    [SIZE_COMPATIBILITY_WRAPPER_ATTRIBUTE]: true\n  };\n  // The initial render will be delayed until the measured size is available.\n  const shouldRender = Boolean(size);\n  // In the export case, we'll sometimes be provided with explicit width and\n  // height to use as fallback. This is a temporary measure and will only\n  // happen when the used width / height is a fixed number. This code should\n  // be removed once we're no longer using `renderToStaticMarkup` for export.\n  const fallbackWidth = props.width ?? DEFAULT_SIZE;\n  const fallbackHeight = props.height ?? DEFAULT_SIZE;\n  return React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100%\",\n      pointerEvents: \"none\"\n    },\n    ref: ref,\n    ...dataProps\n  }, shouldRender && React.createElement(Component, {\n    ...props,\n    width: size?.width ?? fallbackWidth,\n    height: size?.height ?? fallbackHeight\n  }));\n};","map":{"version":3,"names":["ResizeObserver","ResizeObserverPolyfill","React","useEffect","useForceUpdate","useIsomorphicLayoutEffect","isBrowser","safeWindow","DEFAULT_SIZE","SharedObserver","sharedResizeObserver","callbacks","WeakMap","constructor","updateResizedElements","bind","entries","entry","callbackForElement","get","target","contentRect","observeElementWithCallback","element","callback","observe","set","unobserve","delete","undefined","useRerenderOnResize","ref","update","current","useMeasuredSize","forceUpdate","size","useRef","updateSize","newSize","width","height","offsetWidth","offsetHeight","SIZE_COMPATIBILITY_WRAPPER_ATTRIBUTE","withMeasuredSize","Component","props","dataProps","shouldRender","Boolean","fallbackWidth","fallbackHeight","createElement","style","pointerEvents"],"sources":["../../../src/components/hoc/withMeasuredSize.tsx"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}