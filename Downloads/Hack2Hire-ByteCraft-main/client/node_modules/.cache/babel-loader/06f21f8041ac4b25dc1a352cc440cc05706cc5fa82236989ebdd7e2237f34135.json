{"ast":null,"code":"import { assert } from \"./../../utils/assert.js\";\nimport { Point } from \"./Point.js\";\n/**\n * @internal\n */\nexport class PathSegment {\n  // #region withClassDiscriminator\n  // NOTE: this implementation carefully copies the implementation of `withClassDiscriminator`\n  // from Vekter. If making changes here, make sure to sync them to `withClassDiscriminator` as well.\n  __class = \"PathSegment\";\n  static displayName = \"WithClassDiscriminatorMixin(PathSegment)\";\n  // #endregion\n  x = 0; // The anchor point of the segment.\n  y = 0;\n  handleMirroring = \"straight\";\n  handleOutX = 0; // Describes the out tangent of the segment.\n  handleOutY = 0;\n  handleInX = 0; // Describes the in tangent of the segment.\n  handleInY = 0;\n  radius = 0;\n  constructor(value) {\n    if (value) {\n      Object.assign(this, value);\n    }\n  }\n  merge(value) {\n    return Object.assign(Object.create(Object.getPrototypeOf(this)), this, value);\n  }\n}\n// #region withClassDiscriminator\n// NOTE: this implementation carefully copies the implementation of `withClassDiscriminator`\n// from Vekter. If making changes here, make sure to sync them to `withClassDiscriminator` as well.\n;\nPathSegment.prototype.__class = \"PathSegment\";\n// #endregion\n/**\n * @internal\n */\n(function (PathSegment) {\n  PathSegment.point = pathSegment => {\n    return {\n      x: pathSegment.x,\n      y: pathSegment.y\n    };\n  };\n  PathSegment.handleOut = pathSegment => {\n    return {\n      x: pathSegment.handleOutX,\n      y: pathSegment.handleOutY\n    };\n  };\n  PathSegment.handleIn = pathSegment => {\n    return {\n      x: pathSegment.handleInX,\n      y: pathSegment.handleInY\n    };\n  };\n  PathSegment.calculatedHandleOut = pathSegment => {\n    switch (pathSegment.handleMirroring) {\n      case \"symmetric\":\n      case \"disconnected\":\n      case \"asymmetric\":\n        return Point.add(PathSegment.point(pathSegment), PathSegment.handleOut(pathSegment));\n      default:\n        return {\n          x: pathSegment.x,\n          y: pathSegment.y\n        };\n    }\n  };\n  PathSegment.calculatedHandleIn = pathSegment => {\n    switch (pathSegment.handleMirroring) {\n      case \"symmetric\":\n        return Point.subtract(PathSegment.point(pathSegment), PathSegment.handleOut(pathSegment));\n      case \"disconnected\":\n      case \"asymmetric\":\n        return Point.add(PathSegment.point(pathSegment), PathSegment.handleIn(pathSegment));\n      default:\n        return PathSegment.point(pathSegment);\n    }\n  };\n  PathSegment.curveDefault = (points, index) => {\n    if (points.length > 2) {\n      let pointBefore;\n      let pointAfter;\n      if (index === 0) {\n        pointBefore = points[points.length - 1];\n      } else {\n        pointBefore = points[index - 1];\n      }\n      if (index === points.length - 1) {\n        pointAfter = points[0];\n      } else {\n        pointAfter = points[index + 1];\n      }\n      assert(pointBefore, \"pointBefore should be defined\");\n      assert(pointAfter, \"pointAfter should be defined\");\n      const delta = Point.subtract(PathSegment.point(pointAfter), PathSegment.point(pointBefore));\n      return {\n        x: delta.x / 4,\n        y: delta.y / 4\n      };\n    }\n    return {\n      x: 10,\n      y: 10\n    };\n  };\n})(PathSegment || (PathSegment = {}));","map":{"version":3,"names":["assert","Point","PathSegment","__class","displayName","x","y","handleMirroring","handleOutX","handleOutY","handleInX","handleInY","radius","constructor","value","Object","assign","merge","create","getPrototypeOf","prototype","point","pathSegment","handleOut","handleIn","calculatedHandleOut","add","calculatedHandleIn","subtract","curveDefault","points","index","length","pointBefore","pointAfter","delta"],"sources":["../../../src/render/types/PathSegment.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}