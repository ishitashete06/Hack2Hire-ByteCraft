{"ast":null,"code":"import { isString } from \"../utils/utils.js\";\nconst elementKey = \"element\";\nconst collectionKey = \"collection\";\nconst collectionItemIdKey = \"collectionItemId\";\nconst pathVariablesKey = \"pathVariables\";\n// This includes the comma that separates the media type from the data.\nconst mediaType = \"framer/page-link,\";\n/**\n * @internal\n * @deprecated\n */\nexport function isFramerPageLink(value) {\n  return isString(value) && value.startsWith(`data:${mediaType}`);\n}\n/**\n * @internal\n * @deprecated\n */\nexport function createFramerPageLink(targetId = null, options = {}) {\n  const target = targetId ? targetId : \"none\";\n  const link = new URL(`data:${mediaType}${target}`);\n  if (options.element) {\n    link.searchParams.append(elementKey, options.element);\n  }\n  if (options.collectionItem) {\n    link.searchParams.append(collectionKey, options.collectionItem.collection);\n    link.searchParams.append(collectionItemIdKey, options.collectionItem.collectionItemId);\n    link.searchParams.append(pathVariablesKey, new URLSearchParams(options.collectionItem.pathVariables).toString());\n  }\n  return link.href;\n}\n/**\n * @internal\n * @deprecated\n */\nexport function parseFramerPageLink(link) {\n  if (!isFramerPageLink(link)) return;\n  try {\n    const url = new URL(link);\n    const target = url.pathname.substring(mediaType.length);\n    const searchParams = url.searchParams;\n    const element = searchParams.has(elementKey) ? searchParams.get(elementKey) : undefined;\n    let collectionItem;\n    const collection = searchParams.get(collectionKey);\n    const collectionItemId = searchParams.get(collectionItemIdKey);\n    const pathVariablesValue = searchParams.get(pathVariablesKey);\n    if (collection && collectionItemId && pathVariablesValue) {\n      const pathVariables = Object.fromEntries(new URLSearchParams(pathVariablesValue).entries());\n      collectionItem = {\n        collection,\n        collectionItemId,\n        pathVariables\n      };\n    }\n    return {\n      target: target === \"none\" ? null : target,\n      /**\n       * For historical reason we used to set \"element=none\" into the\n       * datalink, we no longer do that today, but we still keep this code\n       * so we could parse legacy links correctly.\n       */\n      element: element === \"none\" ? undefined : element,\n      collectionItem\n    };\n  } catch {\n    return;\n  }\n}\n/**\n * @internal\n * @deprecated\n */\nexport function shouldOpenLinkInNewTab(link) {\n  return !isFramerPageLink(link);\n}\n/** @internal @deprecated */\nexport function navigateFromAttributes(navigate, element, implicitPathVariables) {\n  // These attributes are set by `replaceFramerPageLinks`.\n  let routeId = element.getAttribute(\"data-framer-page-link-target\" /* PageLinkAttribute.Page */);\n  let elementId;\n  let pathVariables;\n  if (routeId) {\n    elementId = element.getAttribute(\"data-framer-page-link-element\" /* PageLinkAttribute.Element */) ?? undefined;\n    const pathVariablesRaw = element.getAttribute(\"data-framer-page-link-path-variables\" /* PageLinkAttribute.PathVariables */);\n    if (pathVariablesRaw) {\n      pathVariables = Object.fromEntries(new URLSearchParams(pathVariablesRaw).entries());\n    }\n  } else {\n    // Just in case for some reason the link on the element wasn't resolved, try to parse it.\n    const href = element.getAttribute(\"href\");\n    if (!href) return false;\n    const link = parseFramerPageLink(href);\n    if (!link || !link.target) return false;\n    routeId = link.target;\n    elementId = link.element ?? undefined;\n    pathVariables = link.collectionItem?.pathVariables;\n  }\n  const smoothScroll = elementId ? element.dataset.framerSmoothScroll !== undefined : undefined;\n  navigate(routeId, elementId, Object.assign({}, implicitPathVariables, pathVariables), smoothScroll);\n  return true;\n}","map":{"version":3,"names":["isString","elementKey","collectionKey","collectionItemIdKey","pathVariablesKey","mediaType","isFramerPageLink","value","startsWith","createFramerPageLink","targetId","options","target","link","URL","element","searchParams","append","collectionItem","collection","collectionItemId","URLSearchParams","pathVariables","toString","href","parseFramerPageLink","url","pathname","substring","length","has","get","undefined","pathVariablesValue","Object","fromEntries","entries","shouldOpenLinkInNewTab","navigateFromAttributes","navigate","implicitPathVariables","routeId","getAttribute","elementId","pathVariablesRaw","smoothScroll","dataset","framerSmoothScroll","assign"],"sources":["../../src/modules/framerPageLink.ts"],"sourcesContent":[null],"mappings":"AACA,SAASA,QAAQ,QAAQ,mBAAmB;AAqB5C,MAAMC,UAAU,GAAmC,SAAS;AAC5D,MAAMC,aAAa,GAAgD,YAAY;AAC/E,MAAMC,mBAAmB,GAAgD,kBAAkB;AAC3F,MAAMC,gBAAgB,GAAgD,eAAe;AAErF;AACA,MAAMC,SAAS,GAAG,mBAAmB;AAMrC;;;;AAIA,OAAM,SAAUC,gBAAgBA,CAACC,KAAc;EAC3C,OAAOP,QAAQ,CAACO,KAAK,CAAC,IAAIA,KAAK,CAACC,UAAU,CAAC,QAAQH,SAAS,EAAE,CAAC;AACnE;AAEA;;;;AAIA,OAAM,SAAUI,oBAAoBA,CAACC,QAAA,GAA0B,IAAI,EAAEC,OAAA,GAAoC,EAAE;EACvG,MAAMC,MAAM,GAAGF,QAAQ,GAAGA,QAAQ,GAAG,MAAM;EAC3C,MAAMG,IAAI,GAAG,IAAIC,GAAG,CAAC,QAAQT,SAAS,GAAGO,MAAM,EAAE,CAAC;EAElD,IAAID,OAAO,CAACI,OAAO,EAAE;IACjBF,IAAI,CAACG,YAAY,CAACC,MAAM,CAAChB,UAAU,EAAEU,OAAO,CAACI,OAAO,CAAC;;EAGzD,IAAIJ,OAAO,CAACO,cAAc,EAAE;IACxBL,IAAI,CAACG,YAAY,CAACC,MAAM,CAACf,aAAa,EAAES,OAAO,CAACO,cAAc,CAACC,UAAU,CAAC;IAC1EN,IAAI,CAACG,YAAY,CAACC,MAAM,CAACd,mBAAmB,EAAEQ,OAAO,CAACO,cAAc,CAACE,gBAAgB,CAAC;IACtFP,IAAI,CAACG,YAAY,CAACC,MAAM,CAACb,gBAAgB,EAAE,IAAIiB,eAAe,CAACV,OAAO,CAACO,cAAc,CAACI,aAAa,CAAC,CAACC,QAAQ,EAAE,CAAC;;EAGpH,OAAOV,IAAI,CAACW,IAAI;AACpB;AAYA;;;;AAIA,OAAM,SAAUC,mBAAmBA,CAACZ,IAAa;EAC7C,IAAI,CAACP,gBAAgB,CAACO,IAAI,CAAC,EAAE;EAE7B,IAAI;IACA,MAAMa,GAAG,GAAG,IAAIZ,GAAG,CAACD,IAAI,CAAC;IACzB,MAAMD,MAAM,GAAGc,GAAG,CAACC,QAAQ,CAACC,SAAS,CAACvB,SAAS,CAACwB,MAAM,CAAC;IACvD,MAAMb,YAAY,GAAGU,GAAG,CAACV,YAAY;IAErC,MAAMD,OAAO,GAAGC,YAAY,CAACc,GAAG,CAAC7B,UAAU,CAAC,GAAGe,YAAY,CAACe,GAAG,CAAC9B,UAAU,CAAC,GAAG+B,SAAS;IACvF,IAAId,cAAiE;IAErE,MAAMC,UAAU,GAAGH,YAAY,CAACe,GAAG,CAAC7B,aAAa,CAAC;IAClD,MAAMkB,gBAAgB,GAAGJ,YAAY,CAACe,GAAG,CAAC5B,mBAAmB,CAAC;IAC9D,MAAM8B,kBAAkB,GAAGjB,YAAY,CAACe,GAAG,CAAC3B,gBAAgB,CAAC;IAE7D,IAAIe,UAAU,IAAIC,gBAAgB,IAAIa,kBAAkB,EAAE;MACtD,MAAMX,aAAa,GAAGY,MAAM,CAACC,WAAW,CAAC,IAAId,eAAe,CAACY,kBAAkB,CAAC,CAACG,OAAO,EAAE,CAAC;MAC3FlB,cAAc,GAAG;QACbC,UAAU;QACVC,gBAAgB;QAChBE;OACH;;IAGL,OAAO;MACHV,MAAM,EAAEA,MAAM,KAAK,MAAM,GAAG,IAAI,GAAGA,MAAM;MACzC;;;;;MAKAG,OAAO,EAAEA,OAAO,KAAK,MAAM,GAAGiB,SAAS,GAAGjB,OAAO;MACjDG;KACH;GACJ,CAAC,MAAM;IACJ;;AAER;AAEA;;;;AAIA,OAAM,SAAUmB,sBAAsBA,CAACxB,IAAa;EAChD,OAAO,CAACP,gBAAgB,CAACO,IAAI,CAAC;AAClC;AAaA;AACA,OAAM,SAAUyB,sBAAsBA,CAClCC,QAA+B,EAC/BxB,OAA0B,EAC1ByB,qBAA+C;EAE/C;EACA,IAAIC,OAAO,GAAG1B,OAAO,CAAC2B,YAAY,6DAAwB;EAC1D,IAAIC,SAA6B;EACjC,IAAIrB,aAAkD;EACtD,IAAImB,OAAO,EAAE;IACTE,SAAS,GAAG5B,OAAO,CAAC2B,YAAY,iEAA2B,IAAIV,SAAS;IACxE,MAAMY,gBAAgB,GAAG7B,OAAO,CAAC2B,YAAY,8EAAiC;IAC9E,IAAIE,gBAAgB,EAAE;MAClBtB,aAAa,GAAGY,MAAM,CAACC,WAAW,CAAC,IAAId,eAAe,CAACuB,gBAAgB,CAAC,CAACR,OAAO,EAAE,CAAC;;GAE1F,MAAM;IACH;IACA,MAAMZ,IAAI,GAAGT,OAAO,CAAC2B,YAAY,CAAC,MAAM,CAAC;IACzC,IAAI,CAAClB,IAAI,EAAE,OAAO,KAAK;IACvB,MAAMX,IAAI,GAAGY,mBAAmB,CAACD,IAAI,CAAC;IACtC,IAAI,CAACX,IAAI,IAAI,CAACA,IAAI,CAACD,MAAM,EAAE,OAAO,KAAK;IACvC6B,OAAO,GAAG5B,IAAI,CAACD,MAAM;IACrB+B,SAAS,GAAG9B,IAAI,CAACE,OAAO,IAAIiB,SAAS;IACrCV,aAAa,GAAGT,IAAI,CAACK,cAAc,EAAEI,aAAa;;EAGtD,MAAMuB,YAAY,GAAGF,SAAS,GAAG5B,OAAO,CAAC+B,OAAO,CAACC,kBAAkB,KAAKf,SAAS,GAAGA,SAAS;EAC7FO,QAAQ,CAACE,OAAO,EAAEE,SAAS,EAAET,MAAM,CAACc,MAAM,CAAC,EAAE,EAAER,qBAAqB,EAAElB,aAAa,CAAC,EAAEuB,YAAY,CAAC;EACnG,OAAO,IAAI;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}