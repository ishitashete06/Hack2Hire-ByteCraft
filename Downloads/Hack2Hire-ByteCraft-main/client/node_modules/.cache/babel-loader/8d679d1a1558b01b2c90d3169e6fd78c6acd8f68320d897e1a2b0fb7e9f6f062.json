{"ast":null,"code":"import { isFiniteNumber } from \"../../render/utils/isFiniteNumber.js\";\nimport { isMotionValue } from \"../../render/utils/isMotionValue.js\";\nimport { useIsomorphicLayoutEffect } from \"../../useIsomorphicLayoutEffect.js\";\nexport function useUpdateScrollOffset(ref, side, offset, cancelEmulatedTouchScrollAnimation) {\n  useIsomorphicLayoutEffect(() => {\n    if (isMotionValue(offset)) {\n      const updateScrollLeft = () => {\n        cancelEmulatedTouchScrollAnimation?.();\n        const element = ref.current;\n        if (element) element[side] = Math.abs(offset.get());\n      };\n      updateScrollLeft();\n      return offset.on(\"change\", updateScrollLeft);\n    } else if (isFiniteNumber(offset)) {\n      const element = ref.current;\n      if (!element) return;\n      cancelEmulatedTouchScrollAnimation?.();\n      element[side] = Math.abs(offset);\n    }\n  },\n  // We only want to update on contentOffset changes\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [offset]);\n}","map":{"version":3,"names":["isFiniteNumber","isMotionValue","useIsomorphicLayoutEffect","useUpdateScrollOffset","ref","side","offset","cancelEmulatedTouchScrollAnimation","updateScrollLeft","element","current","Math","abs","get","on"],"sources":["../../../src/components/utils/useUpdateScrollOffset.ts"],"sourcesContent":[null],"mappings":"AAGA,SAASA,cAAc,QAAQ,sCAAsC;AACrE,SAASC,aAAa,QAAQ,qCAAqC;AACnE,SAASC,yBAAyB,QAAQ,oCAAoC;AAE9E,OAAM,SAAUC,qBAAqBA,CACjCC,GAA8B,EAC9BC,IAAgC,EAChCC,MAAoC,EACpCC,kCAA+C;EAE/CL,yBAAyB,CACrB,MAAK;IACD,IAAID,aAAa,CAACK,MAAM,CAAC,EAAE;MACvB,MAAME,gBAAgB,GAAGA,CAAA,KAAK;QAC1BD,kCAAkC,GAAE,CAAE;QACtC,MAAME,OAAO,GAAGL,GAAG,CAACM,OAAO;QAC3B,IAAID,OAAO,EAAEA,OAAO,CAACJ,IAAI,CAAC,GAAGM,IAAI,CAACC,GAAG,CAACN,MAAM,CAACO,GAAG,EAAE,CAAC;MACvD,CAAC;MACDL,gBAAgB,EAAE;MAClB,OAAOF,MAAM,CAACQ,EAAE,CAAC,QAAQ,EAAEN,gBAAgB,CAAC;KAC/C,MAAM,IAAIR,cAAc,CAACM,MAAM,CAAC,EAAE;MAC/B,MAAMG,OAAO,GAAGL,GAAG,CAACM,OAAO;MAC3B,IAAI,CAACD,OAAO,EAAE;MACdF,kCAAkC,GAAE,CAAE;MACtCE,OAAO,CAACJ,IAAI,CAAC,GAAGM,IAAI,CAACC,GAAG,CAACN,MAAM,CAAC;;EAExC,CAAC;EACD;EACA;EACA,CAACA,MAAM,CAAC,CACX;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}