{"ast":null,"code":"import React, { createContext, useCallback, useContext, useEffect, useRef } from \"react\";\nimport { isFunction } from \"../utils/utils.js\";\nimport { useMap } from \"./utils/useMap.js\";\nconst NavigationTargetContext = /* @__PURE__ */createContext({\n  register: () => {},\n  deregister: () => {}\n});\n/**\n * @internal\n *\n * Run the registered callback when the current navigation target changes\n * @param isCurrent If the ground node is present as the current target in the preview\n */\nexport const NavigationTargetWrapper = ({\n  isCurrent,\n  isOverlayed,\n  children\n}) => {\n  const callbacks = useMap();\n  const register = useCallback(fn => {\n    if (callbacks.has(fn)) {\n      // Should never happen\n      // eslint-disable-next-line no-console\n      console.warn(\"NavigationTargetWrapper: already registered\");\n      return;\n    }\n    callbacks.set(fn, undefined);\n  }, [callbacks /* constant, so should never change */]);\n  const deregister = useCallback(fn => {\n    // Cleanup before removing the callback\n    const cleanup = callbacks.get(fn);\n    cleanup?.();\n    callbacks.delete(fn);\n  }, [callbacks /* constant, so should never change */]);\n  const value = useRef({\n    register,\n    deregister\n  }).current;\n  useEffect(() => {\n    callbacks.forEach((_, cb) => {\n      const newCleanup = cb(isCurrent, isOverlayed);\n      callbacks.set(cb, isFunction(newCleanup) ? newCleanup : undefined);\n    });\n    return () => {\n      callbacks.forEach((cleanup, cb) => {\n        if (!cleanup) return;\n        // Cleanup and remove cleanup callback so we never call it more than once\n        cleanup();\n        callbacks.set(cb, undefined);\n      });\n    };\n  }, [isCurrent, isOverlayed, callbacks /* constant, so should never change */]);\n  return React.createElement(NavigationTargetContext.Provider, {\n    value: value\n  }, children);\n};\n/**\n * @internal\n *\n * Register the callback on mount to the NavigationTargetWrapper, deregister it on unmount.\n * The callback will be fired when the current target changes. The callback allows a cleanup callback to be returned.\n * The cleanup will fire before the next update and on unmount.\n * @param callback A callback that receives the `isCurrent` state of the NavigateTargetWrapper\n * @param deps If present, callback will be renewed when the dependencies change.\n */\nexport function useOnCurrentTargetChange(callback, deps = []) {\n  const {\n    register,\n    deregister\n  } = useContext(NavigationTargetContext);\n  useEffect(() => {\n    if (!callback) return;\n    register(callback);\n    return () => deregister(callback);\n    // callback should not change while previewing\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [register, deregister, ...deps]);\n}","map":{"version":3,"names":["React","createContext","useCallback","useContext","useEffect","useRef","isFunction","useMap","NavigationTargetContext","register","deregister","NavigationTargetWrapper","isCurrent","isOverlayed","children","callbacks","fn","has","console","warn","set","undefined","cleanup","get","delete","value","current","forEach","_","cb","newCleanup","createElement","Provider","useOnCurrentTargetChange","callback","deps"],"sources":["../../src/components/NavigationTargetContext.tsx"],"sourcesContent":[null],"mappings":"AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACxF,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,MAAM,QAAQ,mBAAmB;AAK1C,MAAMC,uBAAuB,GAAG,eAAgBP,aAAa,CAG1D;EAAEQ,QAAQ,EAAEA,CAAA,KAAK,CAAE,CAAC;EAAEC,UAAU,EAAEA,CAAA,KAAK,CAAE;AAAC,CAAE,CAAC;AAIhD;;;;;;AAMA,OAAO,MAAMC,uBAAuB,GAAGA,CAAC;EAAEC,SAAS;EAAEC,WAAW;EAAEC;AAAQ,CAAS,KAAI;EACnF,MAAMC,SAAS,GAAGR,MAAM,EAA0C;EAElE,MAAME,QAAQ,GAAGP,WAAW,CACvBc,EAAqB,IAAI;IACtB,IAAID,SAAS,CAACE,GAAG,CAACD,EAAE,CAAC,EAAE;MACnB;MACA;MACAE,OAAO,CAACC,IAAI,CAAC,6CAA6C,CAAC;MAC3D;;IAEJJ,SAAS,CAACK,GAAG,CAACJ,EAAE,EAAEK,SAAS,CAAC;EAChC,CAAC,EACD,CAACN,SAAS,CAAC,uCAAuC,CACrD;EAED,MAAML,UAAU,GAAGR,WAAW,CACzBc,EAAqB,IAAI;IACtB;IACA,MAAMM,OAAO,GAAGP,SAAS,CAACQ,GAAG,CAACP,EAAE,CAAC;IACjCM,OAAO,GAAE,CAAE;IACXP,SAAS,CAACS,MAAM,CAACR,EAAE,CAAC;EACxB,CAAC,EACD,CAACD,SAAS,CAAC,uCAAuC,CACrD;EAED,MAAMU,KAAK,GAAGpB,MAAM,CAAC;IAAEI,QAAQ;IAAEC;EAAU,CAAE,CAAC,CAACgB,OAAO;EAEtDtB,SAAS,CAAC,MAAK;IACXW,SAAS,CAACY,OAAO,CAAC,CAACC,CAAC,EAAEC,EAAE,KAAI;MACxB,MAAMC,UAAU,GAAGD,EAAE,CAACjB,SAAS,EAAEC,WAAW,CAAC;MAC7CE,SAAS,CAACK,GAAG,CAACS,EAAE,EAAEvB,UAAU,CAACwB,UAAU,CAAC,GAAGA,UAAU,GAAGT,SAAS,CAAC;IACtE,CAAC,CAAC;IACF,OAAO,MAAK;MACRN,SAAS,CAACY,OAAO,CAAC,CAACL,OAAO,EAAEO,EAAE,KAAI;QAC9B,IAAI,CAACP,OAAO,EAAE;QACd;QACAA,OAAO,EAAE;QACTP,SAAS,CAACK,GAAG,CAACS,EAAE,EAAER,SAAS,CAAC;MAChC,CAAC,CAAC;IACN,CAAC;EACL,CAAC,EAAE,CAACT,SAAS,EAAEC,WAAW,EAAEE,SAAS,CAAC,uCAAuC,CAAC;EAE9E,OAAOf,KAAA,CAAA+B,aAAA,CAACvB,uBAAuB,CAACwB,QAAQ;IAACP,KAAK,EAAEA;EAAK,GAAGX,QAAQ,CAAoC;AACxG,CAAC;AAED;;;;;;;;;AASA,OAAM,SAAUmB,wBAAwBA,CAACC,QAA2B,EAAEC,IAAA,GAA6B,EAAE;EACjG,MAAM;IAAE1B,QAAQ;IAAEC;EAAU,CAAE,GAAGP,UAAU,CAACK,uBAAuB,CAAC;EACpEJ,SAAS,CAAC,MAAK;IACX,IAAI,CAAC8B,QAAQ,EAAE;IACfzB,QAAQ,CAACyB,QAAQ,CAAC;IAClB,OAAO,MAAMxB,UAAU,CAACwB,QAAQ,CAAC;IACjC;IACA;EACJ,CAAC,EAAE,CAACzB,QAAQ,EAAEC,UAAU,EAAE,GAAGyB,IAAI,CAAC,CAAC;AACvC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}