{"ast":null,"code":"import { distance, interpolate, mix } from \"framer-motion\";\nimport React from \"react\";\nimport { CustomPropertiesContext } from \"../presentation/CustomProperties.js\";\nimport { ConvertColor } from \"../types/Color/ConvertColor.js\";\nimport { Rect } from \"../types/Rect.js\";\nimport { RenderTarget } from \"../types/RenderEnvironment.js\";\nimport { BoxShadow } from \"../types/Shadow.js\";\nimport { isFiniteNumber } from \"../utils/isFiniteNumber.js\";\nimport { roundedNumberString } from \"../utils/roundedNumber.js\";\nexport function shadowsAsFilter(shadows) {\n  const filters = [];\n  if (shadows && shadows.length) {\n    const dropShadows = shadows.map(shadowItem => {\n      return `drop-shadow(${shadowItem.x}px ${shadowItem.y}px ${shadowItem.blur}px ${shadowItem.color})`;\n    });\n    filters.push(...dropShadows);\n  }\n  return filters;\n}\nexport function collectTextShadowsForProps(props, style) {\n  if (!props.shadows || props.shadows.length === 0) return;\n  const textShadow = props.shadows.map(shadow => {\n    return `${shadow.x}px ${shadow.y}px ${shadow.blur}px ${shadow.color}`;\n  }).join(\", \");\n  if (!textShadow) return;\n  style.textShadow = textShadow;\n}\nexport function collectBoxShadowsForProps(props, style) {\n  if (!props.shadows || props.shadows.length === 0) return;\n  const boxShadow = props.shadows.map(shadowItem => BoxShadow.toCSS(shadowItem)).join(\", \");\n  if (!boxShadow) return;\n  style.boxShadow = boxShadow;\n}\n/** @internal */\nexport function shadowForShape(boxShadows, rect, shapeId, fillAlpha, strokeAlpha, strokeWidth, strokeClipId, svgStrokeAttributes) {\n  const definition = [];\n  let outsetElement = null;\n  let insetElement = null;\n  const needsStrokeClip = false;\n  const shadows = [];\n  const insetShadows = [];\n  const boxShadowsCount = boxShadows.length;\n  // The canvas renderer relies on setting this class to show / hide shadows at different zoom levels\n  const svgShadowClass = \"svg-shadow\";\n  const svgShadowProps = RenderTarget.current() === RenderTarget.canvas ? {\n    className: svgShadowClass\n  } : {};\n  for (const shadow of boxShadows) {\n    shadow.inset ? insetShadows.push(shadow) : shadows.push(shadow);\n  }\n  if (shadows.length > 0) {\n    shadows.reverse();\n    const outsideShadowId = shapeId.add(\"_shadow_out\");\n    const normalizedFrame = Rect.atOrigin(rect);\n    const shadowRects = [normalizedFrame];\n    for (const shadow of shadows) {\n      const shadowFrame = localShadowFrame(shadow, normalizedFrame, true);\n      if (shadowFrame === null) {\n        continue;\n      }\n      shadowRects.push(shadowFrame);\n    }\n    let maxBlur = 0;\n    const filterElements = [];\n    const mergeElements = [];\n    for (let i = 0, il = shadows.length; i < il; i++) {\n      const shadow = shadows[i];\n      if (!shadow) continue;\n      const shadowElements = outerShadowElements(shapeId, shadow, i);\n      maxBlur = Math.max(maxBlur, shadow.blur);\n      filterElements.push(shadowElements.filterElements);\n      mergeElements.push(shadowElements.mergeElement);\n    }\n    let expandStrokeWidth = strokeWidth;\n    if (!isFiniteNumber(expandStrokeWidth)) expandStrokeWidth = 0;\n    let miter = svgStrokeAttributes.strokeMiterlimit;\n    if (!isFiniteNumber(miter)) miter = 4;\n    let shadowRect = Rect.merge(...shadowRects);\n    shadowRect = Rect.inflate(shadowRect, (expandStrokeWidth * miter / 2 + maxBlur) * 1.1);\n    // calculate percentage of shadow frame compared to node frame\n    const width = rect.width + (strokeWidth ? strokeWidth / 2 : 0.1);\n    const height = rect.height + (strokeWidth ? strokeWidth / 2 : 0.1);\n    const filterX = shadowRect.x / width * 100;\n    const filterY = shadowRect.y / height * 100;\n    const filterWidth = shadowRect.width / width * 100;\n    const filterHeight = shadowRect.height / height * 100;\n    definition.push(React.createElement(\"filter\", {\n      key: outsideShadowId.id,\n      id: outsideShadowId.id,\n      x: `${filterX.toFixed(1)}%`,\n      y: `${filterY.toFixed(1)}%`,\n      width: `${filterWidth.toFixed(1)}%`,\n      height: `${filterHeight.toFixed(1)}%`,\n      filterUnits: \"objectBoundingBox\",\n      ...svgShadowProps\n    }, filterElements, shadows.length > 1 ? React.createElement(\"feMerge\", null, mergeElements) : null));\n    outsetElement = React.createElement(\"g\", {\n      filter: outsideShadowId.urlLink,\n      ...svgShadowProps\n    }, React.createElement(\"use\", {\n      ...svgStrokeAttributes,\n      fill: \"black\",\n      fillOpacity: fillAlpha <= 0 ? 0 : 1,\n      stroke: \"black\",\n      strokeOpacity: strokeAlpha <= 0 ? 0 : 1,\n      strokeWidth: strokeAlpha > 0 ? strokeWidth : 0,\n      xlinkHref: shapeId.link,\n      clipPath: strokeClipId.urlLink\n    }));\n  }\n  if (insetShadows.length) {\n    insetShadows.reverse();\n    const insideShadowId = shapeId.add(\"_shadow_inside\");\n    const normalizedFrame = Rect.atOrigin(rect);\n    const shadowFrames = [normalizedFrame];\n    for (const shadow of insetShadows) {\n      const shadowFrame = localShadowFrame(shadow, normalizedFrame, true);\n      if (shadowFrame === null) {\n        continue;\n      }\n      shadowFrames.push(shadowFrame);\n    }\n    const shadowRect = Rect.merge(...shadowFrames);\n    // calculate percentage of shadow frame compared to node frame\n    const width = rect.width + (strokeWidth ? strokeWidth / 2 : 0.1);\n    const height = rect.height + (strokeWidth ? strokeWidth / 2 : 0.1);\n    const filterX = shadowRect.x / width * 100;\n    const filterY = shadowRect.y / height * 100;\n    const filterWidth = shadowRect.width / width * 100;\n    const filterHeight = shadowRect.height / height * 100;\n    const filterElements = [];\n    const mergeElements = [];\n    for (let i = 0, il = insetShadows.length; i < il; i++) {\n      const shadow = insetShadows[i];\n      if (!shadow) continue;\n      const shadowElements = innerShadowElements(shapeId, shadow, i);\n      filterElements.push(shadowElements.filterElements);\n      mergeElements.push(shadowElements.mergeElement);\n    }\n    definition.push(React.createElement(\"filter\", {\n      key: insideShadowId.id,\n      id: insideShadowId.id,\n      x: `${filterX.toFixed(1)}%`,\n      y: `${filterY.toFixed(1)}%`,\n      width: `${filterWidth.toFixed(1)}%`,\n      height: `${filterHeight.toFixed(1)}%`,\n      filterUnits: \"objectBoundingBox\",\n      ...svgShadowProps\n    }, filterElements, insetShadows.length > 1 ? React.createElement(\"feMerge\", null, mergeElements) : null));\n    // if we rendered at lower resolution, we need a clip path ...\n    let clipPath;\n    if (needsStrokeClip) {\n      clipPath = strokeClipId.urlLink;\n    }\n    insetElement = React.createElement(\"use\", {\n      fill: \"black\",\n      fillOpacity: \"1\",\n      filter: insideShadowId.urlLink,\n      xlinkHref: shapeId.link,\n      clipPath: clipPath,\n      ...svgShadowProps\n    });\n  }\n  return {\n    definition,\n    outsetElement,\n    insetElement,\n    needsStrokeClip\n  };\n}\nfunction outerShadowElements(shapeID, shadow, index) {\n  const shadowKey = shapeID.add(\"_outer_shadow\" + index);\n  const offsetResultId = shadowKey.add(\"offset\").id;\n  const blurResultId = shadowKey.add(\"blur\").id;\n  const matrixResultId = shadowKey.add(\"matrix\").id;\n  const filterElements = React.createElement(OuterShadowFilterElements, {\n    key: shadowKey.id + \"-filters\",\n    shadow: shadow,\n    blurId: blurResultId,\n    offsetId: offsetResultId,\n    matrixId: matrixResultId\n  });\n  const mergeElement = React.createElement(\"feMergeNode\", {\n    key: shadowKey.id + \"-merge\",\n    in: matrixResultId\n  });\n  return {\n    filterElements,\n    mergeElement\n  };\n}\nconst OuterShadowFilterElements = props => {\n  const lookup = React.useContext(CustomPropertiesContext);\n  const {\n    shadow,\n    blurId,\n    offsetId,\n    matrixId\n  } = props;\n  // We need to lookup the actual value for the color when dealing with CSS variables.\n  // This needs to be extracted into an API provided to Library dependants via a context.\n  let color = shadow.color;\n  const result = lookup(color);\n  if (result) {\n    color = result;\n  }\n  const rgb = ConvertColor.toRgb(color);\n  const r = roundedNumberString(rgb.r / 255, 3);\n  const g = roundedNumberString(rgb.g / 255, 3);\n  const b = roundedNumberString(rgb.b / 255, 3);\n  const matrixValues = `0 0 0 0 ${r}   0 0 0 0 ${g}   0 0 0 0 ${b}  0 0 0 ${rgb.a} 0`;\n  return React.createElement(React.Fragment, null, React.createElement(\"feOffset\", {\n    dx: shadow.x,\n    dy: shadow.y,\n    in: \"SourceAlpha\",\n    result: offsetId\n  }), React.createElement(\"feGaussianBlur\", {\n    stdDeviation: shadow.blur / 2,\n    in: offsetId,\n    result: blurId\n  }), React.createElement(\"feColorMatrix\", {\n    colorInterpolationFilters: \"sRGB\",\n    values: matrixValues,\n    type: \"matrix\",\n    in: blurId,\n    result: matrixId\n  }));\n};\nfunction innerShadowElements(shapeID, shadow, index) {\n  const shadowKey = shapeID.add(\"_inside_shadow\" + index);\n  const blurId = shadowKey.add(\"blur\").id;\n  const offsetId = shadowKey.add(\"offset\").id;\n  const compositeId = shadowKey.add(\"composite\").id;\n  const matrixId = shadowKey.add(\"matrix\").id;\n  const filterElements = React.createElement(InnerShadowFilterElements, {\n    key: shadowKey.id + \"-filters\",\n    shadow: shadow,\n    blurId: blurId,\n    offsetId: offsetId,\n    compositeId: compositeId,\n    matrixId: matrixId\n  });\n  const mergeElement = React.createElement(\"feMergeNode\", {\n    key: shadowKey.id + \"-merge\",\n    in: matrixId\n  });\n  return {\n    filterElements,\n    mergeElement\n  };\n}\nconst InnerShadowFilterElements = props => {\n  const lookup = React.useContext(CustomPropertiesContext);\n  const {\n    shadow,\n    blurId,\n    offsetId,\n    compositeId,\n    matrixId\n  } = props;\n  // We need to lookup the actual value for the color when dealing with CSS variables.\n  // This needs to be extracted into an API provided to Library dependants via a context.\n  let color = shadow.color;\n  const result = lookup(color);\n  if (result) {\n    color = result;\n  }\n  const rgb = ConvertColor.toRgb(color);\n  const r = rgb.r / 255;\n  const g = rgb.g / 255;\n  const b = rgb.b / 255;\n  const matrixValues = `0 0 0 0 ${r}   0 0 0 0 ${g}   0 0 0 0 ${b}  0 0 0 ${rgb.a} 0`;\n  return React.createElement(React.Fragment, null, React.createElement(\"feGaussianBlur\", {\n    stdDeviation: shadow.blur / 2,\n    in: \"SourceAlpha\",\n    result: blurId\n  }), React.createElement(\"feOffset\", {\n    dx: shadow.x,\n    dy: shadow.y,\n    in: blurId,\n    result: offsetId\n  }), React.createElement(\"feComposite\", {\n    in: offsetId,\n    in2: \"SourceAlpha\",\n    operator: \"arithmetic\",\n    k2: \"-1\",\n    k3: \"1\",\n    result: compositeId\n  }), React.createElement(\"feColorMatrix\", {\n    colorInterpolationFilters: \"sRGB\",\n    values: matrixValues,\n    type: \"matrix\",\n    in: compositeId,\n    result: matrixId\n  }));\n};\nexport function calcMaxRealisticShadowBlur(distance, focus) {\n  return interpolate([0, 0.5, 1], [distance * 5, distance, 0])(focus);\n}\nconst maxSpread = 5;\nexport function calcRealisticShadowSpread(diffusion) {\n  return mix(-maxSpread, 0, diffusion);\n}\n/** @internal */\nexport function localShadowFrame(shadow, frame, isSVG = false) {\n  if (!isSVG && shadow[\"inset\"]) return null;\n  let growth = shadow.blur;\n  let minX;\n  let maxX;\n  let minY;\n  let maxY;\n  if (isSVG) {\n    minX = -Math.abs(shadow.x) - growth;\n    maxX = Math.abs(shadow.x) + frame.width + growth;\n    minY = -Math.abs(shadow.y) - growth;\n    maxY = Math.abs(shadow.y) + frame.height + growth;\n  } else if (BoxShadow.is(shadow) && shadow.type === \"realistic\") {\n    growth = calcMaxRealisticShadowBlur(distance(shadow.x, shadow.y), shadow.focus) + calcRealisticShadowSpread(shadow.diffusion);\n    if (shadow.x >= 0) {\n      minX = 0 - growth;\n      maxX = shadow.x + frame.width + growth;\n    } else {\n      minX = shadow.x - growth;\n      maxX = frame.width + growth;\n    }\n    if (shadow.y >= 0) {\n      minY = 0 - growth;\n      maxY = shadow.y + frame.height + growth;\n    } else {\n      minY = shadow.y - growth;\n      maxY = frame.height + growth;\n    }\n  } else {\n    growth += shadow.spread;\n    minX = shadow.x - growth;\n    maxX = shadow.x + frame.width + growth;\n    minY = shadow.y - growth;\n    maxY = shadow.y + frame.height + growth;\n  }\n  if (maxX <= minX || maxY <= minY) return null;\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}","map":{"version":3,"names":["distance","interpolate","mix","React","CustomPropertiesContext","ConvertColor","Rect","RenderTarget","BoxShadow","isFiniteNumber","roundedNumberString","shadowsAsFilter","shadows","filters","length","dropShadows","map","shadowItem","x","y","blur","color","push","collectTextShadowsForProps","props","style","textShadow","shadow","join","collectBoxShadowsForProps","boxShadow","toCSS","shadowForShape","boxShadows","rect","shapeId","fillAlpha","strokeAlpha","strokeWidth","strokeClipId","svgStrokeAttributes","definition","outsetElement","insetElement","needsStrokeClip","insetShadows","boxShadowsCount","svgShadowClass","svgShadowProps","current","canvas","className","inset","reverse","outsideShadowId","add","normalizedFrame","atOrigin","shadowRects","shadowFrame","localShadowFrame","maxBlur","filterElements","mergeElements","i","il","shadowElements","outerShadowElements","Math","max","mergeElement","expandStrokeWidth","miter","strokeMiterlimit","shadowRect","merge","inflate","width","height","filterX","filterY","filterWidth","filterHeight","createElement","key","id","toFixed","filterUnits","filter","urlLink","fill","fillOpacity","stroke","strokeOpacity","xlinkHref","link","clipPath","insideShadowId","shadowFrames","innerShadowElements","shapeID","index","shadowKey","offsetResultId","blurResultId","matrixResultId","OuterShadowFilterElements","blurId","offsetId","matrixId","in","lookup","useContext","result","rgb","toRgb","r","g","b","matrixValues","a","Fragment","dx","dy","stdDeviation","colorInterpolationFilters","values","type","compositeId","InnerShadowFilterElements","in2","operator","k2","k3","calcMaxRealisticShadowBlur","focus","maxSpread","calcRealisticShadowSpread","diffusion","frame","isSVG","growth","minX","maxX","minY","maxY","abs","is","spread"],"sources":["../../../src/render/style/shadow.tsx"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}