{"ast":null,"code":"import { deprecationWarning } from \"../../utils/deprecation.js\";\nimport { Observers } from \"./Observers.js\";\n/**\n * @public\n */\nexport const Animatable = /* @__PURE__ */(() => {\n  /**\n   * Creates a Animatable object that can be animated. These objects can be passed into a {@link DeprecatedFrame} instead of a primitive like number\n   * and afterwards animated with {@link (animate:function)}.\n   * @remarks\n   * ```jsx\n   * const value = Animatable(0)\n   * animate(value, 100)\n   * ```\n   * @param value - Value to animate\n   * @returns Animatable value\n   * @public\n   * @deprecated Use {@link useMotionValue} instead\n   */\n  function Animatable(value) {\n    deprecationWarning(\"Animatable()\", \"2.0.0\", \"the new animation API (https://www.framer.com/api/animation/)\");\n    return isAnimatable(value) ? value : new AnimatableValue(value);\n  }\n  /**\n   * @internal\n   */\n  Animatable.transaction = update => {\n    const transactionId = Math.random();\n    const updatedValues = new Set();\n    const updater = (animatable, value) => {\n      animatable.set(value, transactionId);\n      updatedValues.add(animatable);\n    };\n    update(updater, transactionId);\n    const finishObservers = [];\n    updatedValues.forEach(value => {\n      finishObservers.push(...value.finishTransaction(transactionId));\n    });\n    finishObservers.forEach(finish => {\n      finish(transactionId);\n    });\n  };\n  /**\n   * @public\n   */\n  Animatable.getNumber = (value, defaultValue = 0) => {\n    return Animatable.get(value, defaultValue);\n  };\n  /** @internal */\n  Animatable.get = (value, defaultValue) => {\n    if (value === undefined || value === null) {\n      return defaultValue;\n    }\n    if (isAnimatable(value)) {\n      return value.get();\n    }\n    return value;\n  };\n  /**\n   * @internal\n   */\n  Animatable.objectToValues = object => {\n    if (!object) {\n      return object;\n    }\n    const result = {};\n    for (const key in object) {\n      const value = object[key];\n      if (isAnimatable(value)) {\n        result[key] = value.get();\n      } else {\n        result[key] = value;\n      }\n    }\n    return result;\n  };\n  return Animatable;\n})();\nconst onUpdateKey = \"onUpdate\";\nconst finishTransactionKey = \"finishTransaction\";\n/**\n * @internal\n * @deprecated\n */\nexport function isAnimatable(value) {\n  return value !== null && typeof value === \"object\" && onUpdateKey in value && value[onUpdateKey] instanceof Function && finishTransactionKey in value && value[finishTransactionKey] instanceof Function;\n}\nfunction animatableInterpolation(value, currentInterpolation) {\n  return {\n    interpolate(from, to) {\n      const fromValue = from.get();\n      const toValue = to.get();\n      const result = Animatable(fromValue);\n      return progress => {\n        const v = currentInterpolation.interpolate(fromValue, toValue)(progress);\n        result.set(v);\n        return result;\n      };\n    },\n    difference(from, to) {\n      const v = from.get();\n      return currentInterpolation.difference(v, to.get());\n    }\n  };\n}\nclass AnimatableValue {\n  value;\n  observers = new Observers();\n  constructor(value) {\n    this.value = value;\n  }\n  static interpolationFor(value, currentInterpolation) {\n    if (isAnimatable(value)) {\n      return animatableInterpolation(value, currentInterpolation);\n    }\n  }\n  get() {\n    return this.value;\n  }\n  set(value, transaction) {\n    const oldValue = this.value;\n    if (isAnimatable(value)) {\n      value = value.get();\n    }\n    this.value = value;\n    const change = {\n      value,\n      oldValue\n    };\n    this.observers.notify(change, transaction);\n  }\n  finishTransaction(transaction) {\n    return this.observers.finishTransaction(transaction);\n  }\n  onUpdate(handler) {\n    return this.observers.add(handler);\n  }\n}","map":{"version":3,"names":["deprecationWarning","Observers","Animatable","value","isAnimatable","AnimatableValue","transaction","update","transactionId","Math","random","updatedValues","Set","updater","animatable","set","add","finishObservers","forEach","push","finishTransaction","finish","getNumber","defaultValue","get","undefined","objectToValues","object","result","key","onUpdateKey","finishTransactionKey","Function","animatableInterpolation","currentInterpolation","interpolate","from","to","fromValue","toValue","progress","v","difference","observers","constructor","interpolationFor","oldValue","change","notify","onUpdate","handler"],"sources":["../../../src/animation/Animatable/Animatable.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}