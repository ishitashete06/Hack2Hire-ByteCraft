{"ast":null,"code":"let isFlexboxGapSupportedCached;\n/* @internal */\nexport function isFlexboxGapSupported() {\n  if (isFlexboxGapSupportedCached !== undefined) {\n    return isFlexboxGapSupportedCached;\n  }\n  // Source: https://github.com/Modernizr/Modernizr/blob/master/feature-detects/css/flexgap.js\n  // create flex container with row-gap set\n  const flex = document.createElement(\"div\");\n  Object.assign(flex.style, {\n    position: \"absolute\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    rowGap: \"1px\"\n  });\n  // create two elements inside it\n  flex.appendChild(document.createElement(\"div\"));\n  flex.appendChild(document.createElement(\"div\"));\n  // append to the DOM (needed to obtain scrollHeight)\n  document.body.appendChild(flex);\n  const isSupported = flex.scrollHeight === 1; // flex container should be 1px high from the row-gap\n  if (flex.parentNode) {\n    flex.parentNode.removeChild(flex);\n  }\n  isFlexboxGapSupportedCached = isSupported;\n  return isSupported;\n}","map":{"version":3,"names":["isFlexboxGapSupportedCached","isFlexboxGapSupported","undefined","flex","document","createElement","Object","assign","style","position","display","flexDirection","rowGap","appendChild","body","isSupported","scrollHeight","parentNode","removeChild"],"sources":["../../src/modules/isFlexboxGapSupported.ts"],"sourcesContent":[null],"mappings":"AAAA,IAAIA,2BAAgD;AAEpD;AACA,OAAM,SAAUC,qBAAqBA,CAAA;EACjC,IAAID,2BAA2B,KAAKE,SAAS,EAAE;IAC3C,OAAOF,2BAA2B;;EAGtC;EACA;EACA,MAAMG,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EAC1CC,MAAM,CAACC,MAAM,CAACJ,IAAI,CAACK,KAAK,EAAE;IACtBC,QAAQ,EAAE,UAAU;IACpBC,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,QAAQ;IACvBC,MAAM,EAAE;GACX,CAAC;EAEF;EACAT,IAAI,CAACU,WAAW,CAACT,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC,CAAC;EAC/CF,IAAI,CAACU,WAAW,CAACT,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC,CAAC;EAE/C;EACAD,QAAQ,CAACU,IAAI,CAACD,WAAW,CAACV,IAAI,CAAC;EAC/B,MAAMY,WAAW,GAAGZ,IAAI,CAACa,YAAY,KAAK,CAAC,EAAC;EAC5C,IAAIb,IAAI,CAACc,UAAU,EAAE;IACjBd,IAAI,CAACc,UAAU,CAACC,WAAW,CAACf,IAAI,CAAC;;EAGrCH,2BAA2B,GAAGe,WAAW;EACzC,OAAOA,WAAW;AACtB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}