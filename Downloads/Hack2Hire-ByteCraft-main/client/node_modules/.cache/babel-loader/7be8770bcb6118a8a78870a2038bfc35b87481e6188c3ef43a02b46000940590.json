{"ast":null,"code":"// rules-of-hooks is disabled for this file so that we avoid calling pointless\n// useEffects on the framer canvas.\n/* eslint-disable react-hooks/rules-of-hooks */\nimport React from \"react\";\nimport { useOnCurrentTargetChange } from \"../components/NavigationTargetContext.js\";\nimport { useIsOnFramerCanvas } from \"./useIsOnFramerCanvas.js\";\nfunction callbackForVariant(map, variant) {\n  if (map[variant]) return map[variant];\n  if (variant in map) return undefined;\n  return map.default;\n}\n/**\n * Executes a callback when the base variant changes. Events will not be\n * executed on the Framer canvas.\n *\n * @public\n */\nexport function useOnVariantChange(variant, callbackMap) {\n  const isOnFramerCanvas = useIsOnFramerCanvas();\n  if (isOnFramerCanvas) return;\n  const isActiveScreenRef = React.useRef(true);\n  // Prevent the callback map from unintentionally triggering useEffect calls.\n  const callbackMapRef = React.useRef(callbackMap);\n  useOnCurrentTargetChange((isCurrent, isOverlayed) => {\n    const isActiveScreen = isCurrent && !isOverlayed;\n    if (!isActiveScreenRef.current && isActiveScreen) {\n      const callback = callbackForVariant(callbackMapRef.current, variant);\n      if (callback) callback();\n    }\n    isActiveScreenRef.current = isActiveScreen;\n  }, []);\n  React.useEffect(() => {\n    if (isActiveScreenRef.current) {\n      const callback = callbackForVariant(callbackMapRef.current, variant);\n      if (callback) callback();\n    }\n  }, [variant]);\n}\n/**\n * A simplified version of useOnVariantChange, that takes a single callback,\n * cancelling it only if the navigation target changes.\n *\n * @internal\n */\nexport function useOnAppear(callback) {\n  useOnVariantChange(\"default\", {\n    default: callback\n  });\n}","map":{"version":3,"names":["React","useOnCurrentTargetChange","useIsOnFramerCanvas","callbackForVariant","map","variant","undefined","default","useOnVariantChange","callbackMap","isOnFramerCanvas","isActiveScreenRef","useRef","callbackMapRef","isCurrent","isOverlayed","isActiveScreen","current","callback","useEffect","useOnAppear"],"sources":["../../src/modules/useOnVariantChange.ts"],"sourcesContent":[null],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,wBAAwB,QAAQ,0CAA0C;AACnF,SAASC,mBAAmB,QAAQ,0BAA0B;AAG9D,SAASC,kBAAkBA,CAACC,GAAgB,EAAEC,OAAe;EACzD,IAAID,GAAG,CAACC,OAAO,CAAC,EAAE,OAAOD,GAAG,CAACC,OAAO,CAAC;EACrC,IAAIA,OAAO,IAAID,GAAG,EAAE,OAAOE,SAAS;EACpC,OAAOF,GAAG,CAACG,OAAO;AACtB;AAEA;;;;;;AAMA,OAAM,SAAUC,kBAAkBA,CAACH,OAAe,EAAEI,WAAwB;EACxE,MAAMC,gBAAgB,GAAGR,mBAAmB,EAAE;EAC9C,IAAIQ,gBAAgB,EAAE;EAEtB,MAAMC,iBAAiB,GAAGX,KAAK,CAACY,MAAM,CAAC,IAAI,CAAC;EAC5C;EACA,MAAMC,cAAc,GAAGb,KAAK,CAACY,MAAM,CAACH,WAAW,CAAC;EAEhDR,wBAAwB,CAAC,CAACa,SAAS,EAAEC,WAAW,KAAI;IAChD,MAAMC,cAAc,GAAGF,SAAS,IAAI,CAACC,WAAW;IAChD,IAAI,CAACJ,iBAAiB,CAACM,OAAO,IAAID,cAAc,EAAE;MAC9C,MAAME,QAAQ,GAAGf,kBAAkB,CAACU,cAAc,CAACI,OAAO,EAAEZ,OAAO,CAAC;MACpE,IAAIa,QAAQ,EAAEA,QAAQ,EAAE;;IAE5BP,iBAAiB,CAACM,OAAO,GAAGD,cAAc;EAC9C,CAAC,EAAE,EAAE,CAAC;EAENhB,KAAK,CAACmB,SAAS,CAAC,MAAK;IACjB,IAAIR,iBAAiB,CAACM,OAAO,EAAE;MAC3B,MAAMC,QAAQ,GAAGf,kBAAkB,CAACU,cAAc,CAACI,OAAO,EAAEZ,OAAO,CAAC;MACpE,IAAIa,QAAQ,EAAEA,QAAQ,EAAE;;EAEhC,CAAC,EAAE,CAACb,OAAO,CAAC,CAAC;AACjB;AAEA;;;;;;AAMA,OAAM,SAAUe,WAAWA,CAACF,QAAoB;EAC5CV,kBAAkB,CAAC,SAAS,EAAE;IAAED,OAAO,EAAEW;EAAQ,CAAE,CAAC;AACxD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}