{"ast":null,"code":"import React from \"react\";\n/**\n * When managing hiding/showing overlays, we want to prevent accidental body\n * scrolling beneath the overlay. This hook decorates a normal React useState\n * hook with solving this problem.\n *\n * @public\n */\nexport function useOverlayState({\n  blockDocumentScrolling = true\n} = {}) {\n  const [showOverlay, setShowOverlay] = React.useState(false);\n  const callback = React.useCallback(show => {\n    setShowOverlay(show);\n    if (blockDocumentScrolling === false) return;\n    if (show) {\n      document.documentElement.style.setProperty(\"overflow\", \"hidden\");\n    } else {\n      document.documentElement.style.removeProperty(\"overflow\");\n    }\n  }, [blockDocumentScrolling]);\n  // Ensure overflow is cleaned up when the hook is destroyed.\n  React.useEffect(() => () => {\n    if (blockDocumentScrolling === false) return;\n    document.documentElement.style.removeProperty(\"overflow\");\n  }, [blockDocumentScrolling]);\n  return [showOverlay, callback];\n}","map":{"version":3,"names":["React","useOverlayState","blockDocumentScrolling","showOverlay","setShowOverlay","useState","callback","useCallback","show","document","documentElement","style","setProperty","removeProperty","useEffect"],"sources":["../../src/modules/useOverlayState.tsx"],"sourcesContent":[null],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB;;;;;;;AAOA,OAAM,SAAUC,eAAeA,CAAC;EAAEC,sBAAsB,GAAG;AAAI,IAA2C,EAAE;EACxG,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGJ,KAAK,CAACK,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAMC,QAAQ,GAAGN,KAAK,CAACO,WAAW,CAC7BC,IAAa,IAAI;IACdJ,cAAc,CAACI,IAAI,CAAC;IACpB,IAAIN,sBAAsB,KAAK,KAAK,EAAE;IAEtC,IAAIM,IAAI,EAAE;MACNC,QAAQ,CAACC,eAAe,CAACC,KAAK,CAACC,WAAW,CAAC,UAAU,EAAE,QAAQ,CAAC;KACnE,MAAM;MACHH,QAAQ,CAACC,eAAe,CAACC,KAAK,CAACE,cAAc,CAAC,UAAU,CAAC;;EAEjE,CAAC,EACD,CAACX,sBAAsB,CAAC,CAC3B;EAED;EACAF,KAAK,CAACc,SAAS,CACX,MAAM,MAAK;IACP,IAAIZ,sBAAsB,KAAK,KAAK,EAAE;IAEtCO,QAAQ,CAACC,eAAe,CAACC,KAAK,CAACE,cAAc,CAAC,UAAU,CAAC;EAC7D,CAAC,EACD,CAACX,sBAAsB,CAAC,CAC3B;EAED,OAAO,CAACC,WAAW,EAAEG,QAAQ,CAAU;AAC3C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}