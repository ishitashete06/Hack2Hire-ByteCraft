{"ast":null,"code":"import React from \"react\";\nimport { findAnchorElement } from \"../render/utils/findAnchorElement.js\";\nimport { getPathForRoute, inferInitialRouteFromPath, preloadComponent, useCurrentRoute, useRouter } from \"../router/index.js\";\nimport { assert } from \"../utils/assert.js\";\nimport { isString } from \"../utils/utils.js\";\nimport { isFramerPageLink, parseFramerPageLink } from \"./framerPageLink.js\";\nconst linkKey = \"webPageId\";\nfunction isLinkToWebPage(link) {\n  return Boolean(link && typeof link === \"object\" && linkKey in link);\n}\nfunction createVariablesFromPageLinkCollectionItem(collectionItem) {\n  if (!collectionItem) return undefined;\n  const variables = {};\n  for (const pathVariablesKey in collectionItem.pathVariables) {\n    const value = collectionItem.pathVariables[pathVariablesKey];\n    if (value) variables[pathVariablesKey] = value;\n  }\n  return variables;\n}\n/**\n * Convert a framer page link string into the same shape as a ComplexLink from\n * Vekter.\n *\n * @internal\n */\nexport function linkFromFramerPageLink(link) {\n  if (!isFramerPageLink(link)) return link;\n  const parsed = parseFramerPageLink(link);\n  if (!parsed) return undefined;\n  const {\n    target,\n    element,\n    collectionItem\n  } = parsed;\n  if (!target) return undefined;\n  return {\n    webPageId: target,\n    hash: element ?? undefined,\n    pathVariables: createVariablesFromPageLinkCollectionItem(collectionItem)\n  };\n}\n// Note: This regular expression should match all other places in our code base.\nexport const pathVariablesRegExp = /:([a-zA-Z][a-zA-Z0-9_]*)/g;\n/** @internal */\nexport const PathVariablesContext = React.createContext(undefined);\n/**\n * Implicit path variables (defaults to use for links) are providedâ€¦\n *\n * - via the PathVariablesContext, for use with repeaters\n *\n *   e.g. a link to /blog/:slug, repeated multiple times with different :slug\n *   variables\n *\n * - via the current dynamic page\n *\n *   e.g. a page links to itself (permalink? scroll target?)\n *\n * XXX: You never know which route these path variables are intended for, so\n * it's possible to have a mismatch. Should this hook accept a route ID?\n *\n * @internal\n */\nexport function useImplicitPathVariables() {\n  const contextPathVariables = React.useContext(PathVariablesContext);\n  const currentPathVariables = useCurrentRoute()?.pathVariables;\n  const pathVariables = contextPathVariables || currentPathVariables;\n  return pathVariables;\n}\n/**\n * @param route The current route to compare against.\n * @param link The link that may point at the current page.\n * @param implicitPathVariables Path variables that will be used by default if\n * not explicitly defined in the link.\n */\nexport function linkMatchesRoute(route, {\n  webPageId,\n  hash,\n  pathVariables\n}, implicitPathVariables) {\n  if (webPageId !== route.id) return false;\n  // If we allowed page links to be active when they had an element, all page\n  // links that were to an element on the current page would always be active.\n  // We don't want that, so for now, we ignore links with elements. In future,\n  // maybe we can build a feature so that links to an element on the current\n  // page are only active when the element is in view.\n  if (hash) return false;\n  // If there's path variables provided via a context, we should only return\n  // true when the context matches the path variable in the current route.\n  if (route.path && route.pathVariables) {\n    const combinedPathVariable = Object.assign({}, implicitPathVariables, pathVariables);\n    for (const [, key] of route.path.matchAll(pathVariablesRegExp)) {\n      if (!key) return false;\n      if (route.pathVariables[key] !== combinedPathVariable[key]) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n/**\n * @internal\n */\nexport function useLinkMatchesRoute(link) {\n  const route = useCurrentRoute();\n  const contextPathVariables = React.useContext(PathVariablesContext);\n  if (!route) return false;\n  const pageLink = isString(link) ? linkFromFramerPageLink(link) : link;\n  return isLinkToWebPage(pageLink) ? linkMatchesRoute(route, pageLink, contextPathVariables) : false;\n}\nfunction isInternalURL(href) {\n  if (href === undefined) return false;\n  if (href.startsWith(\"#\") || href.startsWith(\"/\") || href.startsWith(\".\")) return true;\n  return false;\n}\nfunction isValidURL(href, isInternal) {\n  try {\n    const url = new URL(href);\n    return Boolean(url.protocol); // in theory this should always be true, but just in case?\n  } catch {\n    // Ignore thrown errors.\n  }\n  return isInternal;\n}\n/** @internal */\nexport var AnchorLinkTarget;\n(function (AnchorLinkTarget) {\n  AnchorLinkTarget[\"_blank\"] = \"_blank\";\n  AnchorLinkTarget[\"_self\"] = \"_self\";\n})(AnchorLinkTarget || (AnchorLinkTarget = {}));\nfunction getTargetAttrValue(openInNewTab, isInternal) {\n  if (openInNewTab !== undefined) {\n    // `_self` is the browser default, we can just omit the attribute\n    return openInNewTab ? AnchorLinkTarget._blank : undefined;\n  }\n  // If the target prop is not set, fallback to the default behavior based on the link\n  return isInternal ? undefined : AnchorLinkTarget._blank;\n}\nexport function propsForLink(href, openInNewTab = undefined) {\n  const isInternal = isInternalURL(href);\n  const anchorTarget = getTargetAttrValue(openInNewTab, isInternal);\n  return {\n    href: isValidURL(href, isInternal) ? href : `https://${href}`,\n    target: anchorTarget,\n    rel: !isInternal ? \"noopener\" : undefined\n  };\n}\nfunction createOnClickLinkHandler(router, routeId, elementId, combinedPathVariables, smoothScroll) {\n  return event => {\n    // If command is pressed when clicking a link we want to open a new tab instead\n    if (event.metaKey) return;\n    /**\n     * Note: in the preview iframe we hijack all anchor link\n     * clicks and modify the target based on the href, so that\n     * we won't try to open an external links in the preview\n     * iframe, for example. (see PreviewRenderer.tsx)\n     */\n    // We don't need SPA routing when opening links in a new tab\n    const anchorElement = findAnchorElement(event.target);\n    if (!anchorElement || anchorElement.getAttribute(\"target\") === AnchorLinkTarget._blank) return;\n    event.preventDefault();\n    router.navigate?.(routeId, elementId, combinedPathVariables, smoothScroll);\n  };\n}\nfunction propsForRoutePath(href, openInNewTab, router, currentRoute, implicitPathVariables, smoothScroll) {\n  const isInternal = isInternalURL(href);\n  if (!router.routes || !router.getRoute || !currentRoute || !isInternal) {\n    return propsForLink(href, openInNewTab);\n  }\n  try {\n    const [pathname, hash] = href.split(\"#\", 2);\n    assert(pathname !== undefined, \"A href must have a defined pathname.\");\n    const {\n      routeId,\n      pathVariables\n    } = inferInitialRouteFromPath(router.routes, pathname);\n    const route = router.getRoute(routeId);\n    if (route) {\n      preloadComponent(route.page);\n      const combinedPathVariables = Object.assign({}, implicitPathVariables, pathVariables);\n      // Make the link relative to the current path if we can.\n      const path = getPathForRoute(route, {\n        currentRoutePath: currentRoute.path,\n        // The hash value is already fully resolved so we don't need to\n        // provide any hashVariables.\n        hash: hash || undefined,\n        pathVariables: combinedPathVariables\n      });\n      const anchorTarget = getTargetAttrValue(openInNewTab, true);\n      return {\n        href: path,\n        target: anchorTarget,\n        onClick: createOnClickLinkHandler(router, routeId, hash || undefined, combinedPathVariables, smoothScroll)\n      };\n    }\n  } catch {\n    // Fall through, we could not match the path to a path defined in our\n    // routes. We will assume the href is an external link.\n  }\n  return propsForLink(href, openInNewTab);\n}\n/** @public */\nexport const Link = /* @__PURE__ */React.forwardRef(({\n  children,\n  href,\n  openInNewTab,\n  smoothScroll,\n  ...restProps\n}, forwardedRef) => {\n  const router = useRouter();\n  const currentRoute = useCurrentRoute();\n  const implicitPathVariables = useImplicitPathVariables();\n  const props = React.useMemo(() => {\n    if (!href) return {};\n    const pageLink = isLinkToWebPage(href) ? href : linkFromFramerPageLink(href);\n    if (!pageLink) return {};\n    if (isString(pageLink)) {\n      return propsForRoutePath(pageLink, openInNewTab, router, currentRoute, implicitPathVariables, smoothScroll);\n    }\n    const {\n      webPageId,\n      hash,\n      pathVariables,\n      hashVariables\n    } = pageLink;\n    const route = router.getRoute?.(webPageId);\n    if (route) preloadComponent(route.page);\n    const combinedPathVariable = Object.assign({}, implicitPathVariables, pathVariables);\n    const combinedHashVariable = Object.assign({}, implicitPathVariables, hashVariables);\n    const anchorTarget = getTargetAttrValue(openInNewTab, true);\n    const resolvedHref = getPathForRoute(route, {\n      currentRoutePath: currentRoute?.path,\n      hash,\n      pathVariables: combinedPathVariable,\n      hashVariables: combinedHashVariable\n    });\n    const resolvedHash = resolvedHref.split(\"#\", 2)[1];\n    return {\n      href: resolvedHref,\n      target: anchorTarget,\n      onClick: createOnClickLinkHandler(router, webPageId, resolvedHash, combinedPathVariable, smoothScroll),\n      \"data-framer-page-link-current\": currentRoute && linkMatchesRoute(currentRoute, pageLink, implicitPathVariables) || undefined\n    };\n  }, [currentRoute, href, openInNewTab, implicitPathVariables, router, smoothScroll]);\n  if (!children) return null;\n  const child = React.Children.only(children);\n  if (!React.isValidElement(child)) return null;\n  // Ensure that we only overwrite a child's ref if we are specifically\n  // forwarding a provided ref. A forwardedRef can be provided if a\n  // CodeComponent with slots that are links tries to provide refs.\n  return React.cloneElement(child, {\n    ...restProps,\n    ...props,\n    ref: forwardedRef ?? restProps.ref\n  });\n});\n/** @public */\nexport function resolveLink(href, router, implicitPathVariables) {\n  // Parsing framer page links means this function is stuck in library.\n  const pageLink = isLinkToWebPage(href) ? href : linkFromFramerPageLink(href);\n  if (!isLinkToWebPage(pageLink)) return isString(href) ? propsForLink(href).href : undefined;\n  // Bail out, we can't convert an object to a string path.\n  if (!router.getRoute || !router.currentRouteId) return undefined;\n  const currentRoute = router.getRoute(router.currentRouteId);\n  const {\n    webPageId,\n    hash,\n    pathVariables,\n    hashVariables\n  } = pageLink;\n  const route = router.getRoute(webPageId);\n  const combinedPathVariables = Object.assign({}, router.currentPathVariables, implicitPathVariables, pathVariables);\n  const combinedHashVariables = Object.assign({}, router.currentPathVariables, implicitPathVariables, hashVariables);\n  return getPathForRoute(route, {\n    currentRoutePath: currentRoute?.path,\n    hash,\n    pathVariables: combinedPathVariables,\n    hashVariables: combinedHashVariables,\n    relative: false\n  });\n}\n/** @public */\nexport function resolvePageScope(pageLink, router) {\n  // Bail out, we can't convert an object to a string path.\n  if (!router.getRoute || !router.currentRouteId) return undefined;\n  const currentRoute = router.getRoute(router.currentRouteId);\n  const {\n    webPageId\n  } = pageLink;\n  const route = router.getRoute(webPageId);\n  return getPathForRoute(route, {\n    currentRoutePath: currentRoute?.path,\n    relative: false\n  });\n}","map":{"version":3,"names":["React","findAnchorElement","getPathForRoute","inferInitialRouteFromPath","preloadComponent","useCurrentRoute","useRouter","assert","isString","isFramerPageLink","parseFramerPageLink","linkKey","isLinkToWebPage","link","Boolean","createVariablesFromPageLinkCollectionItem","collectionItem","undefined","variables","pathVariablesKey","pathVariables","value","linkFromFramerPageLink","parsed","target","element","webPageId","hash","pathVariablesRegExp","PathVariablesContext","createContext","useImplicitPathVariables","contextPathVariables","useContext","currentPathVariables","linkMatchesRoute","route","implicitPathVariables","id","path","combinedPathVariable","Object","assign","key","matchAll","useLinkMatchesRoute","pageLink","isInternalURL","href","startsWith","isValidURL","isInternal","url","URL","protocol","AnchorLinkTarget","getTargetAttrValue","openInNewTab","_blank","propsForLink","anchorTarget","rel","createOnClickLinkHandler","router","routeId","elementId","combinedPathVariables","smoothScroll","event","metaKey","anchorElement","getAttribute","preventDefault","navigate","propsForRoutePath","currentRoute","routes","getRoute","pathname","split","page","currentRoutePath","onClick","Link","forwardRef","children","restProps","forwardedRef","props","useMemo","hashVariables","combinedHashVariable","resolvedHref","resolvedHash","child","Children","only","isValidElement","cloneElement","ref","resolveLink","currentRouteId","combinedHashVariables","relative","resolvePageScope"],"sources":["../../src/modules/Link.tsx"],"sourcesContent":[null],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,iBAAiB,QAAQ,sCAAsC;AACxE,SAEIC,eAAe,EACfC,yBAAyB,EACzBC,gBAAgB,EAEhBC,eAAe,EACfC,SAAS,QACN,oBAAoB;AAC3B,SAASC,MAAM,QAAQ,oBAAoB;AAC3C,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAAgDC,gBAAgB,EAAEC,mBAAmB,QAAQ,qBAAqB;AAUlH,MAAMC,OAAO,GAAwB,WAAW;AAChD,SAASC,eAAeA,CAACC,IAAa;EAClC,OAAOC,OAAO,CAACD,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAIF,OAAO,IAAIE,IAAI,CAAC;AACvE;AAEA,SAASE,yCAAyCA,CAC9CC,cAAiE;EAEjE,IAAI,CAACA,cAAc,EAAE,OAAOC,SAAS;EAErC,MAAMC,SAAS,GAAG,EAAE;EACpB,KAAK,MAAMC,gBAAgB,IAAIH,cAAc,CAACI,aAAa,EAAE;IACzD,MAAMC,KAAK,GAAGL,cAAc,CAACI,aAAa,CAACD,gBAAgB,CAAC;IAC5D,IAAIE,KAAK,EAAEH,SAAS,CAACC,gBAAgB,CAAC,GAAGE,KAAK;;EAElD,OAAOH,SAAS;AACpB;AAEA;;;;;;AAMA,OAAM,SAAUI,sBAAsBA,CAACT,IAAwB;EAC3D,IAAI,CAACJ,gBAAgB,CAACI,IAAI,CAAC,EAAE,OAAOA,IAAI;EACxC,MAAMU,MAAM,GAAGb,mBAAmB,CAACG,IAAI,CAAC;EACxC,IAAI,CAACU,MAAM,EAAE,OAAON,SAAS;EAC7B,MAAM;IAAEO,MAAM;IAAEC,OAAO;IAAET;EAAc,CAAE,GAAGO,MAAM;EAClD,IAAI,CAACC,MAAM,EAAE,OAAOP,SAAS;EAE7B,OAAO;IACHS,SAAS,EAAEF,MAAM;IACjBG,IAAI,EAAEF,OAAO,IAAIR,SAAS;IAC1BG,aAAa,EAAEL,yCAAyC,CAACC,cAAc;GAC1E;AACL;AAEA;AACA,OAAO,MAAMY,mBAAmB,GAAG,2BAA2B;AAE9D;AACA,OAAO,MAAMC,oBAAoB,GAAG7B,KAAK,CAAC8B,aAAa,CAAsCb,SAAS,CAAC;AAEvG;;;;;;;;;;;;;;;;;AAiBA,OAAM,SAAUc,wBAAwBA,CAAA;EACpC,MAAMC,oBAAoB,GAAGhC,KAAK,CAACiC,UAAU,CAACJ,oBAAoB,CAAC;EACnE,MAAMK,oBAAoB,GAAG7B,eAAe,EAAE,EAAEe,aAAa;EAC7D,MAAMA,aAAa,GAAGY,oBAAoB,IAAIE,oBAAoB;EAClE,OAAOd,aAAa;AACxB;AAEA;;;;;;AAMA,OAAM,SAAUe,gBAAgBA,CAC5BC,KAAkB,EAClB;EAAEV,SAAS;EAAEC,IAAI;EAAEP;AAAa,CAAiB,EACjDiB,qBAA+C;EAE/C,IAAIX,SAAS,KAAKU,KAAK,CAACE,EAAE,EAAE,OAAO,KAAK;EACxC;EACA;EACA;EACA;EACA;EACA,IAAIX,IAAI,EAAE,OAAO,KAAK;EACtB;EACA;EACA,IAAIS,KAAK,CAACG,IAAI,IAAIH,KAAK,CAAChB,aAAa,EAAE;IACnC,MAAMoB,oBAAoB,GAAGC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEL,qBAAqB,EAAEjB,aAAa,CAAC;IACpF,KAAK,MAAM,GAAGuB,GAAG,CAAC,IAAIP,KAAK,CAACG,IAAI,CAACK,QAAQ,CAAChB,mBAAmB,CAAC,EAAE;MAC5D,IAAI,CAACe,GAAG,EAAE,OAAO,KAAK;MACtB,IAAIP,KAAK,CAAChB,aAAa,CAACuB,GAAG,CAAC,KAAKH,oBAAoB,CAACG,GAAG,CAAC,EAAE;QACxD,OAAO,KAAK;;;;EAIxB,OAAO,IAAI;AACf;AAEA;;;AAGA,OAAM,SAAUE,mBAAmBA,CAAChC,IAAa;EAC7C,MAAMuB,KAAK,GAAG/B,eAAe,EAAE;EAC/B,MAAM2B,oBAAoB,GAAGhC,KAAK,CAACiC,UAAU,CAACJ,oBAAoB,CAAC;EACnE,IAAI,CAACO,KAAK,EAAE,OAAO,KAAK;EACxB,MAAMU,QAAQ,GAAGtC,QAAQ,CAACK,IAAI,CAAC,GAAGS,sBAAsB,CAACT,IAAI,CAAC,GAAGA,IAAI;EACrE,OAAOD,eAAe,CAACkC,QAAQ,CAAC,GAAGX,gBAAgB,CAACC,KAAK,EAAEU,QAAQ,EAAEd,oBAAoB,CAAC,GAAG,KAAK;AACtG;AAsBA,SAASe,aAAaA,CAACC,IAAwB;EAC3C,IAAIA,IAAI,KAAK/B,SAAS,EAAE,OAAO,KAAK;EACpC,IAAI+B,IAAI,CAACC,UAAU,CAAC,GAAG,CAAC,IAAID,IAAI,CAACC,UAAU,CAAC,GAAG,CAAC,IAAID,IAAI,CAACC,UAAU,CAAC,GAAG,CAAC,EAAE,OAAO,IAAI;EACrF,OAAO,KAAK;AAChB;AAEA,SAASC,UAAUA,CAACF,IAAY,EAAEG,UAAmB;EACjD,IAAI;IACA,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAACL,IAAI,CAAC;IACzB,OAAOlC,OAAO,CAACsC,GAAG,CAACE,QAAQ,CAAC,EAAC;GAChC,CAAC,MAAM;IACJ;EAAA;EAEJ,OAAOH,UAAU;AACrB;AAEA;AACA,WAAYI,gBAGX;AAHD,WAAYA,gBAAgB;EACxBA,gBAAA,qBAAiB;EACjBA,gBAAA,mBAAe;AACnB,CAAC,EAHWA,gBAAgB,KAAhBA,gBAAgB;AAK5B,SAASC,kBAAkBA,CAACC,YAAiC,EAAEN,UAAmB;EAC9E,IAAIM,YAAY,KAAKxC,SAAS,EAAE;IAC5B;IACA,OAAOwC,YAAY,GAAGF,gBAAgB,CAACG,MAAM,GAAGzC,SAAS;;EAG7D;EACA,OAAOkC,UAAU,GAAGlC,SAAS,GAAGsC,gBAAgB,CAACG,MAAM;AAC3D;AAIA,OAAM,SAAUC,YAAYA,CAACX,IAAY,EAAES,YAAA,GAAoCxC,SAAS;EACpF,MAAMkC,UAAU,GAAGJ,aAAa,CAACC,IAAI,CAAC;EACtC,MAAMY,YAAY,GAAGJ,kBAAkB,CAACC,YAAY,EAAEN,UAAU,CAAC;EAEjE,OAAO;IACHH,IAAI,EAAEE,UAAU,CAACF,IAAI,EAAEG,UAAU,CAAC,GAAGH,IAAI,GAAG,WAAWA,IAAI,EAAE;IAC7DxB,MAAM,EAAEoC,YAAY;IACpBC,GAAG,EAAE,CAACV,UAAU,GAAG,UAAU,GAAGlC;GACnC;AACL;AAEA,SAAS6C,wBAAwBA,CAC7BC,MAA0B,EAC1BC,OAAe,EACfC,SAAkB,EAClBC,qBAA+C,EAC/CC,YAAsB;EAEtB,OAAQC,KAA0C,IAAI;IAClD;IACA,IAAIA,KAAK,CAACC,OAAO,EAAE;IACnB;;;;;;IAMA;IACA,MAAMC,aAAa,GAAGrE,iBAAiB,CAACmE,KAAK,CAAC5C,MAAM,CAAC;IACrD,IAAI,CAAC8C,aAAa,IAAIA,aAAa,CAACC,YAAY,CAAC,QAAQ,CAAC,KAAKhB,gBAAgB,CAACG,MAAM,EAAE;IACxFU,KAAK,CAACI,cAAc,EAAE;IACtBT,MAAM,CAACU,QAAQ,GAAGT,OAAO,EAAEC,SAAS,EAAEC,qBAAqB,EAAEC,YAAY,CAAC;EAC9E,CAAC;AACL;AAEA,SAASO,iBAAiBA,CACtB1B,IAAY,EACZS,YAAiC,EACjCM,MAA0B,EAC1BY,YAAqC,EACrCtC,qBAA+C,EAC/C8B,YAAsB;EAEtB,MAAMhB,UAAU,GAAGJ,aAAa,CAACC,IAAI,CAAC;EAEtC,IAAI,CAACe,MAAM,CAACa,MAAM,IAAI,CAACb,MAAM,CAACc,QAAQ,IAAI,CAACF,YAAY,IAAI,CAACxB,UAAU,EAAE;IACpE,OAAOQ,YAAY,CAACX,IAAI,EAAES,YAAY,CAAC;;EAG3C,IAAI;IACA,MAAM,CAACqB,QAAQ,EAAEnD,IAAI,CAAC,GAAGqB,IAAI,CAAC+B,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC;IAC3CxE,MAAM,CAACuE,QAAQ,KAAK7D,SAAS,EAAE,sCAAsC,CAAC;IACtE,MAAM;MAAE+C,OAAO;MAAE5C;IAAa,CAAE,GAAGjB,yBAAyB,CAAC4D,MAAM,CAACa,MAAM,EAAEE,QAAQ,CAAC;IACrF,MAAM1C,KAAK,GAAG2B,MAAM,CAACc,QAAQ,CAACb,OAAO,CAAC;IACtC,IAAI5B,KAAK,EAAE;MACPhC,gBAAgB,CAACgC,KAAK,CAAC4C,IAAI,CAAC;MAE5B,MAAMd,qBAAqB,GAAGzB,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEL,qBAAqB,EAAEjB,aAAa,CAAC;MAErF;MACA,MAAMmB,IAAI,GAAGrC,eAAe,CAACkC,KAAK,EAAE;QAChC6C,gBAAgB,EAAEN,YAAY,CAACpC,IAAI;QACnC;QACA;QACAZ,IAAI,EAAEA,IAAI,IAAIV,SAAS;QACvBG,aAAa,EAAE8C;OAClB,CAAC;MAEF,MAAMN,YAAY,GAAGJ,kBAAkB,CAACC,YAAY,EAAE,IAAI,CAAC;MAE3D,OAAO;QACHT,IAAI,EAAET,IAAI;QACVf,MAAM,EAAEoC,YAAY;QACpBsB,OAAO,EAAEpB,wBAAwB,CAC7BC,MAAM,EACNC,OAAO,EACPrC,IAAI,IAAIV,SAAS,EACjBiD,qBAAqB,EACrBC,YAAY;OAEnB;;GAER,CAAC,MAAM;IACJ;IACA;EAAA;EAGJ,OAAOR,YAAY,CAACX,IAAI,EAAES,YAAY,CAAC;AAC3C;AAIA;AACA,OAAO,MAAM0B,IAAI,GAAG,eAAgBnF,KAAK,CAACoF,UAAU,CAChD,CAAC;EAAEC,QAAQ;EAAErC,IAAI;EAAES,YAAY;EAAEU,YAAY;EAAE,GAAGmB;AAAS,CAAE,EAAEC,YAAY,KAAI;EAC3E,MAAMxB,MAAM,GAAGzD,SAAS,EAAE;EAC1B,MAAMqE,YAAY,GAAGtE,eAAe,EAAE;EACtC,MAAMgC,qBAAqB,GAAGN,wBAAwB,EAAE;EAExD,MAAMyD,KAAK,GAAGxF,KAAK,CAACyF,OAAO,CAAC,MAAuB;IAC/C,IAAI,CAACzC,IAAI,EAAE,OAAO,EAAE;IAEpB,MAAMF,QAAQ,GAAGlC,eAAe,CAACoC,IAAI,CAAC,GAAGA,IAAI,GAAG1B,sBAAsB,CAAC0B,IAAI,CAAC;IAC5E,IAAI,CAACF,QAAQ,EAAE,OAAO,EAAE;IAExB,IAAItC,QAAQ,CAACsC,QAAQ,CAAC,EAAE;MACpB,OAAO4B,iBAAiB,CACpB5B,QAAQ,EACRW,YAAY,EACZM,MAAM,EACNY,YAAY,EACZtC,qBAAqB,EACrB8B,YAAY,CACf;;IAEL,MAAM;MAAEzC,SAAS;MAAEC,IAAI;MAAEP,aAAa;MAAEsE;IAAa,CAAE,GAAG5C,QAAQ;IAElE,MAAMV,KAAK,GAAG2B,MAAM,CAACc,QAAQ,GAAGnD,SAAS,CAAC;IAE1C,IAAIU,KAAK,EAAEhC,gBAAgB,CAACgC,KAAK,CAAC4C,IAAI,CAAC;IAEvC,MAAMxC,oBAAoB,GAAGC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEL,qBAAqB,EAAEjB,aAAa,CAAC;IACpF,MAAMuE,oBAAoB,GAAGlD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEL,qBAAqB,EAAEqD,aAAa,CAAC;IAEpF,MAAM9B,YAAY,GAAGJ,kBAAkB,CAACC,YAAY,EAAE,IAAI,CAAC;IAE3D,MAAMmC,YAAY,GAAG1F,eAAe,CAACkC,KAAK,EAAE;MACxC6C,gBAAgB,EAAEN,YAAY,EAAEpC,IAAI;MACpCZ,IAAI;MACJP,aAAa,EAAEoB,oBAAoB;MACnCkD,aAAa,EAAEC;KAClB,CAAC;IAEF,MAAME,YAAY,GAAGD,YAAY,CAACb,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAElD,OAAO;MACH/B,IAAI,EAAE4C,YAAY;MAClBpE,MAAM,EAAEoC,YAAY;MACpBsB,OAAO,EAAEpB,wBAAwB,CAACC,MAAM,EAAErC,SAAS,EAAEmE,YAAY,EAAErD,oBAAoB,EAAE2B,YAAY,CAAC;MACtG,+BAA+B,EAC1BQ,YAAY,IAAIxC,gBAAgB,CAACwC,YAAY,EAAE7B,QAAQ,EAAET,qBAAqB,CAAC,IAAKpB;KAC5F;EACL,CAAC,EAAE,CAAC0D,YAAY,EAAE3B,IAAI,EAAES,YAAY,EAAEpB,qBAAqB,EAAE0B,MAAM,EAAEI,YAAY,CAAC,CAAC;EAEnF,IAAI,CAACkB,QAAQ,EAAE,OAAO,IAAI;EAC1B,MAAMS,KAAK,GAAG9F,KAAK,CAAC+F,QAAQ,CAACC,IAAI,CAACX,QAAQ,CAAC;EAC3C,IAAI,CAACrF,KAAK,CAACiG,cAAc,CAAMH,KAAK,CAAC,EAAE,OAAO,IAAI;EAClD;EACA;EACA;EACA,OAAO9F,KAAK,CAACkG,YAAY,CAACJ,KAAK,EAAE;IAAE,GAAGR,SAAS;IAAE,GAAGE,KAAK;IAAEW,GAAG,EAAEZ,YAAY,IAAID,SAAS,CAACa;EAAG,CAAE,CAAC;AACpG,CAAC,CACJ;AAED;AACA,OAAM,SAAUC,WAAWA,CACvBpD,IAAwC,EACxCe,MAA0B,EAC1B1B,qBAA+C;EAE/C;EACA,MAAMS,QAAQ,GAAGlC,eAAe,CAACoC,IAAI,CAAC,GAAGA,IAAI,GAAG1B,sBAAsB,CAAC0B,IAAI,CAAC;EAC5E,IAAI,CAACpC,eAAe,CAACkC,QAAQ,CAAC,EAAE,OAAOtC,QAAQ,CAACwC,IAAI,CAAC,GAAGW,YAAY,CAACX,IAAI,CAAC,CAACA,IAAI,GAAG/B,SAAS;EAC3F;EACA,IAAI,CAAC8C,MAAM,CAACc,QAAQ,IAAI,CAACd,MAAM,CAACsC,cAAc,EAAE,OAAOpF,SAAS;EAEhE,MAAM0D,YAAY,GAAGZ,MAAM,CAACc,QAAQ,CAACd,MAAM,CAACsC,cAAc,CAAC;EAC3D,MAAM;IAAE3E,SAAS;IAAEC,IAAI;IAAEP,aAAa;IAAEsE;EAAa,CAAE,GAAG5C,QAAQ;EAClE,MAAMV,KAAK,GAAG2B,MAAM,CAACc,QAAQ,CAACnD,SAAS,CAAC;EAExC,MAAMwC,qBAAqB,GAAGzB,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEqB,MAAM,CAAC7B,oBAAoB,EAAEG,qBAAqB,EAAEjB,aAAa,CAAC;EAClH,MAAMkF,qBAAqB,GAAG7D,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEqB,MAAM,CAAC7B,oBAAoB,EAAEG,qBAAqB,EAAEqD,aAAa,CAAC;EAElH,OAAOxF,eAAe,CAACkC,KAAK,EAAE;IAC1B6C,gBAAgB,EAAEN,YAAY,EAAEpC,IAAI;IACpCZ,IAAI;IACJP,aAAa,EAAE8C,qBAAqB;IACpCwB,aAAa,EAAEY,qBAAqB;IACpCC,QAAQ,EAAE;GACb,CAAC;AACN;AAEA;AACA,OAAM,SAAUC,gBAAgBA,CAAC1D,QAAuB,EAAEiB,MAA0B;EAChF;EACA,IAAI,CAACA,MAAM,CAACc,QAAQ,IAAI,CAACd,MAAM,CAACsC,cAAc,EAAE,OAAOpF,SAAS;EAEhE,MAAM0D,YAAY,GAAGZ,MAAM,CAACc,QAAQ,CAACd,MAAM,CAACsC,cAAc,CAAC;EAC3D,MAAM;IAAE3E;EAAS,CAAE,GAAGoB,QAAQ;EAC9B,MAAMV,KAAK,GAAG2B,MAAM,CAACc,QAAQ,CAACnD,SAAS,CAAC;EAExC,OAAOxB,eAAe,CAACkC,KAAK,EAAE;IAC1B6C,gBAAgB,EAAEN,YAAY,EAAEpC,IAAI;IACpCgE,QAAQ,EAAE;GACb,CAAC;AACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}