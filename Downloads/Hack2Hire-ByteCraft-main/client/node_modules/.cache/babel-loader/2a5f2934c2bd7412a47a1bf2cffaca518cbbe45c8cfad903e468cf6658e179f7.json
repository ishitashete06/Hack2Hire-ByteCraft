{"ast":null,"code":"/** @internal */\nexport function roundedNumber(value, decimals) {\n  const d = Math.round(Math.abs(decimals));\n  const multiplier = Math.pow(10, d);\n  return Math.round(value * multiplier) / multiplier;\n}\n/** @internal */\nexport function roundedNumberString(value, decimals) {\n  const result = value.toFixed(decimals);\n  if (decimals === 0) {\n    return result;\n  }\n  return result.replace(/\\.?0+$/, \"\");\n}\n/** @internal */\nexport function roundWithOffset(value, offset) {\n  if (offset === 0) {\n    return Math.round(value);\n  }\n  offset -= offset | 0; // Remove everything before the comma\n  if (offset < 0) {\n    offset = 1 - offset;\n  }\n  return Math.round(value - offset) + offset;\n  // }\n}","map":{"version":3,"names":["roundedNumber","value","decimals","d","Math","round","abs","multiplier","pow","roundedNumberString","result","toFixed","replace","roundWithOffset","offset"],"sources":["../../../src/render/utils/roundedNumber.ts"],"sourcesContent":[null],"mappings":"AAAA;AACA,OAAM,SAAUA,aAAaA,CAACC,KAAa,EAAEC,QAAgB;EACzD,MAAMC,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,GAAG,CAACJ,QAAQ,CAAC,CAAC;EACxC,MAAMK,UAAU,GAAGH,IAAI,CAACI,GAAG,CAAC,EAAE,EAAEL,CAAC,CAAC;EAClC,OAAOC,IAAI,CAACC,KAAK,CAACJ,KAAK,GAAGM,UAAU,CAAC,GAAGA,UAAU;AACtD;AAEA;AACA,OAAM,SAAUE,mBAAmBA,CAACR,KAAa,EAAEC,QAAgB;EAC/D,MAAMQ,MAAM,GAAGT,KAAK,CAACU,OAAO,CAACT,QAAQ,CAAC;EACtC,IAAIA,QAAQ,KAAK,CAAC,EAAE;IAChB,OAAOQ,MAAM;;EAEjB,OAAOA,MAAM,CAACE,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;AACvC;AAEA;AACA,OAAM,SAAUC,eAAeA,CAACZ,KAAa,EAAEa,MAAc;EACzD,IAAIA,MAAM,KAAK,CAAC,EAAE;IACd,OAAOV,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC;;EAE5Ba,MAAM,IAAIA,MAAM,GAAG,CAAC,EAAC;EACrB,IAAIA,MAAM,GAAG,CAAC,EAAE;IACZA,MAAM,GAAG,CAAC,GAAGA,MAAM;;EAEvB,OAAOV,IAAI,CAACC,KAAK,CAACJ,KAAK,GAAGa,MAAM,CAAC,GAAGA,MAAM;EAC1C;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}