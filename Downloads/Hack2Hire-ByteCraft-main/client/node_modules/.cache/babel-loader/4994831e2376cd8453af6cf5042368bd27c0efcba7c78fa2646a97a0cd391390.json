{"ast":null,"code":"import { complex, invariant, px } from \"framer-motion\";\nimport { Color } from \"../../render/types/Color/Color.js\";\nconst isCustomValue = v => {\n  return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst isColorProp = key => key === \"background\" || key.endsWith(\"color\") || key.endsWith(\"Color\");\nconst resolveSingleCustomValue = (key, v) => {\n  if (v && typeof v === \"object\") {\n    invariant(isCustomValue(v), \"Motion styles must be numbers, strings, or an instance with a `toValue` and `mix` methods.\");\n    return v.toValue();\n  } else if (isColorProp(key) && typeof v === \"string\" && Color.isColor(v)) {\n    return Color(v).toValue();\n  }\n  return v;\n};\nconst resolveCustomValues = (key, v) => {\n  if (Array.isArray(v)) {\n    const numValues = v.length;\n    const resolved = [];\n    for (let i = 0; i < numValues; i++) {\n      resolved.push(resolveSingleCustomValue(key, v[i]));\n    }\n    return resolved;\n  } else {\n    return resolveSingleCustomValue(key, v);\n  }\n};\nconst customValueHandlers = {\n  size: {\n    set: (inputValues, outputValues, value) => {\n      if (inputValues.height === undefined) {\n        outputValues.height = value;\n      }\n      if (inputValues.width === undefined) {\n        outputValues.width = value;\n      }\n    },\n    type: px\n  },\n  radius: {\n    set: (inputValues, outputValues, value) => {\n      outputValues.borderRadius = value;\n    },\n    type: px\n  },\n  shadow: {\n    set: (inputValues, outputValues, value) => {\n      outputValues.boxShadow = value;\n    },\n    type: complex\n  }\n};\n/**\n * Transform custom values\n *\n * Resolves value types like `Color` into animatable value types like rgba strings.\n *\n * Converts special values like `radius` and `size` into DOM values like `width`/`height`/`borderRadius`\n *\n * @param values\n */\nexport const transformValues = values => {\n  const transformedValues = {};\n  for (const key in values) {\n    const resolved = resolveCustomValues(key, values[key]);\n    const valueHandler = customValueHandlers[key];\n    if (valueHandler) {\n      // If this is a special value type like `radius`, convert it\n      // And if this value type has a default (ie 'px') and its provided as a number, convert it.\n      const isDefaultType = valueHandler.type && typeof values[key] === \"number\";\n      const value = isDefaultType ? valueHandler.type.transform(values[key]) : values[key];\n      valueHandler.set(values, transformedValues, value);\n    } else {\n      // Otherwise just set it\n      transformedValues[key] = resolved;\n    }\n  }\n  return transformedValues;\n};","map":{"version":3,"names":["complex","invariant","px","Color","isCustomValue","v","Boolean","mix","toValue","isColorProp","key","endsWith","resolveSingleCustomValue","isColor","resolveCustomValues","Array","isArray","numValues","length","resolved","i","push","customValueHandlers","size","set","inputValues","outputValues","value","height","undefined","width","type","radius","borderRadius","shadow","boxShadow","transformValues","values","transformedValues","valueHandler","isDefaultType","transform"],"sources":["../../../src/render/utils/transformCustomValues.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}