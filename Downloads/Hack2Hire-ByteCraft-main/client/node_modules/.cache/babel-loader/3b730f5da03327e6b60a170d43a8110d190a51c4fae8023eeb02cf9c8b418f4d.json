{"ast":null,"code":"/**\n * Search the closest anchor element ancestor of the given target.\n * @param target The starting element.\n * @param withinElement If an element is given, the search will stop when it\n * hits the element. Otherwise, it will try to get the closest anchor element.\n */\nexport function findAnchorElement(target, withinElement) {\n  if (target instanceof HTMLAnchorElement) {\n    return target;\n  }\n  if (target instanceof Element) {\n    if (target === withinElement) {\n      return null;\n    }\n    return findAnchorElement(target.parentElement, withinElement);\n  }\n  return null;\n}","map":{"version":3,"names":["findAnchorElement","target","withinElement","HTMLAnchorElement","Element","parentElement"],"sources":["../../../src/render/utils/findAnchorElement.ts"],"sourcesContent":[null],"mappings":"AAAA;;;;;;AAMA,OAAM,SAAUA,iBAAiBA,CAACC,MAAe,EAAEC,aAAkC;EACjF,IAAID,MAAM,YAAYE,iBAAiB,EAAE;IACrC,OAAOF,MAAM;;EAGjB,IAAIA,MAAM,YAAYG,OAAO,EAAE;IAC3B,IAAIH,MAAM,KAAKC,aAAa,EAAE;MAC1B,OAAO,IAAI;;IAGf,OAAOF,iBAAiB,CAACC,MAAM,CAACI,aAAa,EAAEH,aAAa,CAAC;;EAGjE,OAAO,IAAI;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}