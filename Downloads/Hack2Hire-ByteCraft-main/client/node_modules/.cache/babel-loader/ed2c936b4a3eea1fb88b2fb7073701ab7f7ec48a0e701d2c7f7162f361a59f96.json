{"ast":null,"code":"import { safeNavigator } from \"../../utils/safeNavigator.js\";\nimport { typefaceAliases, typefaces as systemTypefaces } from \"./fonts.js\";\nimport { TypefaceSourceNames } from \"./types.js\";\n/** @internal */\nexport const systemTypefaceName = \"System Default\";\n/** @internal */\nexport class LocalFontSource {\n  name = TypefaceSourceNames.Local;\n  typefaces = [];\n  byFamily = new Map();\n  typefaceAliasBySelector = new Map();\n  typefaceAliases = new Map();\n  getTypefaceByFamily(family) {\n    return this.byFamily.get(family) ?? null;\n  }\n  // TODO: these are duplicated across implementations of FontSource\n  // When adding a third source, we should abstract them\n  createTypeface(family) {\n    const typeface = {\n      family: family,\n      fonts: [],\n      source: this.name\n    };\n    this.addTypeface(typeface);\n    return typeface;\n  }\n  addTypeface(typeface) {\n    this.typefaces.push(typeface);\n    this.byFamily.set(typeface.family, typeface);\n  }\n  // end of duplication\n  importFonts() {\n    const fonts = [];\n    for (const family of Object.keys(systemTypefaces)) {\n      const members = systemTypefaces[family];\n      if (!members) continue;\n      const typeface = this.createTypeface(family);\n      for (const variant of Object.keys(members)) {\n        const member = members[variant];\n        if (!member) continue;\n        const {\n          selector,\n          weight\n        } = member;\n        // font.style is never defined in local fonts, we always use a specific font family that already includes the style\n        const font = {\n          variant,\n          selector,\n          weight,\n          typeface,\n          status: \"loaded\"\n        };\n        typeface.fonts.push(font);\n      }\n      fonts.push(...typeface.fonts);\n    }\n    for (const [key, value] of Object.entries(typefaceAliases)) {\n      this.addTypefaceAlias(key, value);\n    }\n    const {\n      typeface: systemTypeface,\n      aliases\n    } = this.getSystemTypeface();\n    this.addTypeface(systemTypeface);\n    for (const [key, value] of aliases) {\n      this.addTypefaceAlias(key, value);\n    }\n    fonts.push(...systemTypeface.fonts);\n    const interTypeface = this.importInterTypeface();\n    fonts.push(...interTypeface.fonts);\n    return fonts;\n  }\n  interTypefaceSelectors = new Set();\n  importInterTypeface() {\n    const inter = [{\n      variant: \"Regular\",\n      selector: \"Inter\",\n      weight: 400,\n      selectorBold: \"Inter-Bold\",\n      selectorBoldItalic: \"Inter-BoldItalic\",\n      selectorItalic: \"Inter-Italic\"\n    }, {\n      variant: \"Thin\",\n      selector: \"Inter-Thin\",\n      weight: 100,\n      selectorBold: \"Inter\",\n      selectorBoldItalic: \"Inter-Italic\",\n      selectorItalic: \"Inter-ThinItalic\"\n    }, {\n      variant: \"Extra Light\",\n      selector: \"Inter-ExtraLight\",\n      weight: 200,\n      selectorBold: \"Inter\",\n      selectorBoldItalic: \"Inter-Italic\",\n      selectorItalic: \"Inter-ExtraLightItalic\"\n    }, {\n      variant: \"Light\",\n      selector: \"Inter-Light\",\n      weight: 300,\n      selectorBold: \"Inter\",\n      selectorBoldItalic: \"Inter-Italic\",\n      selectorItalic: \"Inter-LightItalic\"\n    }, {\n      variant: \"Medium\",\n      selector: \"Inter-Medium\",\n      weight: 500,\n      selectorBold: \"Inter-Bold\",\n      selectorBoldItalic: \"Inter-BoldItalic\",\n      selectorItalic: \"Inter-MediumItalic\"\n    }, {\n      variant: \"Semibold\",\n      selector: \"Inter-SemiBold\",\n      weight: 600,\n      selectorBold: \"Inter-Black\",\n      selectorBoldItalic: \"Inter-BlackItalic\",\n      selectorItalic: \"Inter-SemiBoldItalic\"\n    }, {\n      variant: \"Bold\",\n      selector: \"Inter-Bold\",\n      weight: 700,\n      selectorBold: \"Inter-Black\",\n      selectorBoldItalic: \"Inter-BlackItalic\",\n      selectorItalic: \"Inter-BoldItalic\"\n    }, {\n      variant: \"Extra Bold\",\n      selector: \"Inter-ExtraBold\",\n      weight: 800,\n      selectorBold: \"Inter-Black\",\n      selectorBoldItalic: \"Inter-BlackItalic\",\n      selectorItalic: \"Inter-ExtraBoldItalic\"\n    }, {\n      variant: \"Black\",\n      selector: \"Inter-Black\",\n      weight: 900,\n      selectorBold: undefined,\n      selectorBoldItalic: \"Inter-BlackItalic\",\n      selectorItalic: undefined\n    }, {\n      variant: \"Thin Italic\",\n      selector: \"Inter-ThinItalic\",\n      weight: 100,\n      selectorBold: \"Inter-Italic\",\n      selectorBoldItalic: \"Inter-Italic\",\n      selectorItalic: \"Inter-ThinItalic\"\n    }, {\n      variant: \"Extra Light Italic\",\n      selector: \"Inter-ExtraLightItalic\",\n      weight: 200,\n      selectorBold: \"Inter-Italic\",\n      selectorBoldItalic: \"Inter-Italic\",\n      selectorItalic: \"Inter-ExtraLightItalic\"\n    }, {\n      variant: \"Light Italic\",\n      selector: \"Inter-LightItalic\",\n      weight: 300,\n      selectorBold: \"Inter-Italic\",\n      selectorBoldItalic: \"Inter-Italic\",\n      selectorItalic: \"Inter-LightItalic\"\n    }, {\n      variant: \"Italic\",\n      selector: \"Inter-Italic\",\n      weight: 400,\n      selectorBold: \"Inter-BoldItalic\",\n      selectorBoldItalic: \"Inter-BoldItalic\",\n      selectorItalic: \"Inter-Italic\"\n    }, {\n      variant: \"Medium Italic\",\n      selector: \"Inter-MediumItalic\",\n      weight: 500,\n      selectorBold: \"Inter-BoldItalic\",\n      selectorBoldItalic: \"Inter-BoldItalic\",\n      selectorItalic: \"Inter-MediumItalic\"\n    }, {\n      variant: \"Semibold Italic\",\n      selector: \"Inter-SemiBoldItalic\",\n      weight: 600,\n      selectorBold: \"Inter-BoldItalic\",\n      selectorBoldItalic: \"Inter-BoldItalic\",\n      selectorItalic: \"Inter-SemiBoldItalic\"\n    }, {\n      variant: \"Bold Italic\",\n      selector: \"Inter-BoldItalic\",\n      weight: 700,\n      selectorBold: \"Inter-BlackItalic\",\n      selectorBoldItalic: \"Inter-BlackItalic\",\n      selectorItalic: \"Inter-BoldItalic\"\n    }, {\n      variant: \"Extra Bold Italic\",\n      selector: \"Inter-ExtraBoldItalic\",\n      weight: 800,\n      selectorBold: \"Inter-BlackItalic\",\n      selectorBoldItalic: \"Inter-BlackItalic\",\n      selectorItalic: \"Inter-ExtraBoldItalic\"\n    }, {\n      variant: \"Black Italic\",\n      selector: \"Inter-BlackItalic\",\n      weight: 900,\n      selectorBold: undefined,\n      selectorBoldItalic: undefined,\n      selectorItalic: \"Inter-BlackItalic\"\n    }];\n    const typeface = this.createTypeface(\"Inter\");\n    for (const entry of inter) {\n      const {\n        variant,\n        selector,\n        weight,\n        selectorBold,\n        selectorBoldItalic,\n        selectorItalic\n      } = entry;\n      const font = {\n        variant,\n        selector,\n        selectorBold,\n        selectorBoldItalic,\n        selectorItalic,\n        weight,\n        typeface,\n        style: /italic/i.test(selector) ? \"italic\" : \"normal\"\n      };\n      typeface.fonts.push(font);\n    }\n    typeface.fonts.forEach(t => this.interTypefaceSelectors.add(t.selector));\n    return typeface;\n  }\n  addTypefaceAlias(key, value) {\n    this.typefaceAliases.set(key, value);\n    this.typefaceAliasBySelector.set(value, key);\n  }\n  getSystemTypeface() {\n    const fontFamilies = this.workaroundChrome81and82(\n    // System fonts - Taken from https://furbo.org/stuff/systemfonts-new.html - \"All Platforms\" section\n    \"system-ui|-apple-system|BlinkMacSystemFont|Segoe UI|Roboto|Oxygen|Ubuntu|Cantarell|Fira Sans|Droid Sans|Helvetica Neue|sans-serif\");\n    const typeface = {\n      family: systemTypefaceName,\n      fonts: [],\n      source: this.name\n    };\n    const aliases = new Map();\n    const weights = [400, 100, 200, 300, 500, 600, 700, 800, 900];\n    const styles = [\"normal\", \"italic\"];\n    for (const style of styles) {\n      for (const weight of weights) {\n        const variant = createVariantName(weight, style);\n        const alias = `__SystemDefault-${weight}-${style}__`;\n        const font = {\n          variant,\n          selector: alias,\n          style,\n          weight,\n          typeface,\n          status: \"loaded\"\n        };\n        typeface.fonts.push(font);\n        aliases.set(alias, fontFamilies);\n      }\n    }\n    return {\n      typeface,\n      aliases\n    };\n  }\n  getTypefaceAliasBySelector(selector) {\n    return this.typefaceAliasBySelector.get(selector) || null;\n  }\n  getTypefaceSelectorByAlias(alias) {\n    return this.typefaceAliases.get(alias) || null;\n  }\n  /** Typeface aliases are in the format of `__Alias-Name__` */\n  isTypefaceAlias(value) {\n    if (value && value.match(/^__.*__$/)) return true;\n    return false;\n  }\n  /**\n   * Use 'Inter' web font as System Default fonts on Mac with Chrome v81 v82\n   * https://github.com/framer/company/issues/17277\n   * https://bugs.chromium.org/p/chromium/issues/detail?id=1057654\n   */\n  workaroundChrome81and82(s) {\n    if (safeNavigator) {\n      const userAgent = safeNavigator.userAgent;\n      if (!userAgent.includes(\"Mac OS X 10_15\")) return s;\n      if (!userAgent.includes(\"Chrome/81\") && !userAgent.includes(\"Chrome/82\")) return s;\n    }\n    return `Inter|${s}`;\n  }\n}\nconst fontWeightNames = {\n  \"100\": \"Thin\",\n  \"200\": \"Extra Light\",\n  \"300\": \"Light\",\n  \"400\": \"Normal\",\n  \"500\": \"Medium\",\n  \"600\": \"Semi Bold\",\n  \"700\": \"Bold\",\n  \"800\": \"Extra Bold\",\n  \"900\": \"Black\"\n};\nfunction createVariantName(weight, style) {\n  const friendlyStyle = style === \"normal\" ? \"Regular\" : \"Italic\";\n  if (weight === 400) {\n    return friendlyStyle;\n  }\n  if (style !== \"normal\") {\n    return `${fontWeightNames[weight]} ${friendlyStyle}`;\n  }\n  return `${fontWeightNames[weight]}`;\n}","map":{"version":3,"names":["safeNavigator","typefaceAliases","typefaces","systemTypefaces","TypefaceSourceNames","systemTypefaceName","LocalFontSource","name","Local","byFamily","Map","typefaceAliasBySelector","getTypefaceByFamily","family","get","createTypeface","typeface","fonts","source","addTypeface","push","set","importFonts","Object","keys","members","variant","member","selector","weight","font","status","key","value","entries","addTypefaceAlias","systemTypeface","aliases","getSystemTypeface","interTypeface","importInterTypeface","interTypefaceSelectors","Set","inter","selectorBold","selectorBoldItalic","selectorItalic","undefined","entry","style","test","forEach","t","add","fontFamilies","workaroundChrome81and82","weights","styles","createVariantName","alias","getTypefaceAliasBySelector","getTypefaceSelectorByAlias","isTypefaceAlias","match","s","userAgent","includes","fontWeightNames","friendlyStyle"],"sources":["../../../src/render/fonts/LocalFontSource.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}