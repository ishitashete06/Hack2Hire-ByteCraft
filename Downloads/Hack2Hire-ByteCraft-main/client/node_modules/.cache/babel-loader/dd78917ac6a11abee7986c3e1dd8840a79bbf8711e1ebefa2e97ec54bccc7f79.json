{"ast":null,"code":"import process from \"process\";\nimport React from \"react\";\nimport { safeWindow } from \"../../utils/safeWindow.js\";\nimport { RenderEnvironment, RenderTarget } from \"../types/RenderEnvironment.js\";\nimport { transformValues } from \"../utils/createTransformValues.js\";\nimport { transformString } from \"../utils/transformString.js\";\nimport { Layer } from \"./Layer.js\";\nimport { SVGRoot } from \"./SVGRoot.js\";\n/**\n * @internal\n */\nexport const VectorGroup = /* @__PURE__ */(() => {\n  return class VectorGroupInner extends Layer {\n    static defaultVectorGroupProps = {\n      name: undefined,\n      opacity: undefined,\n      visible: true,\n      x: 0,\n      y: 0,\n      rotation: 0,\n      width: 100,\n      height: 100,\n      targetName: undefined,\n      defaultName: \"\",\n      isRootVectorNode: false,\n      includeTransform: undefined,\n      frame: {\n        x: 0,\n        y: 0,\n        width: 100,\n        height: 100\n      }\n    };\n    static defaultProps = {\n      ...Layer.defaultProps,\n      ...VectorGroupInner.defaultVectorGroupProps\n    };\n    render() {\n      if (process.env.NODE_ENV !== \"production\" && safeWindow[\"perf\"]) safeWindow[\"perf\"].nodeRender();\n      const {\n        id,\n        name: nameProp,\n        opacity,\n        visible,\n        targetName,\n        defaultName,\n        children,\n        includeTransform,\n        x,\n        y,\n        width,\n        height,\n        rotation,\n        isRootVectorNode\n      } = this.props;\n      if (!visible) return null;\n      const {\n        target\n      } = RenderEnvironment;\n      const rect = {\n        x,\n        y,\n        width,\n        height\n      };\n      const transform = transformValues(rect, rotation, isRootVectorNode, includeTransform);\n      const addNames = target === RenderTarget.preview;\n      let name = undefined;\n      if (addNames) {\n        if (targetName) {\n          name = targetName;\n        } else if (nameProp) {\n          name = nameProp;\n        } else {\n          name = defaultName;\n        }\n      }\n      return this.renderElement(React.createElement(\"g\", {\n        transform: transformString(transform),\n        ...{\n          id,\n          name,\n          opacity\n        }\n      }, children));\n    }\n    renderElement(element) {\n      const {\n        isRootVectorNode,\n        width,\n        height,\n        frame,\n        willChangeTransform,\n        includeTransform\n      } = this.props;\n      if (!isRootVectorNode) return element;\n      if (includeTransform) return element;\n      return React.createElement(SVGRoot, {\n        frame: frame,\n        width: width,\n        height: height,\n        willChangeTransform: willChangeTransform,\n        innerRef: this.setLayerElement\n      }, element);\n    }\n  };\n})();","map":{"version":3,"names":["process","React","safeWindow","RenderEnvironment","RenderTarget","transformValues","transformString","Layer","SVGRoot","VectorGroup","VectorGroupInner","defaultVectorGroupProps","name","undefined","opacity","visible","x","y","rotation","width","height","targetName","defaultName","isRootVectorNode","includeTransform","frame","defaultProps","render","env","NODE_ENV","nodeRender","id","nameProp","children","props","target","rect","transform","addNames","preview","renderElement","createElement","element","willChangeTransform","innerRef","setLayerElement"],"sources":["../../../src/render/presentation/VectorGroup.tsx"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}