{"ast":null,"code":"import { motion } from \"framer-motion\";\nimport process from \"process\";\nimport React from \"react\";\nimport { InternalID } from \"../../utils/internalId.js\";\nimport { safeWindow } from \"../../utils/safeWindow.js\";\nimport { shadowForShape } from \"../style/shadow.js\";\nimport { toSVGPath } from \"../traits/Path.js\";\nimport { BackgroundImage } from \"../types/BackgroundImage.js\";\nimport { Color, ConvertColor } from \"../types/Color/index.js\";\nimport { LinearGradient, RadialGradient } from \"../types/Gradient.js\";\nimport { RenderEnvironment, RenderTarget } from \"../types/RenderEnvironment.js\";\nimport { svgElementAttributeDefaults } from \"../types/svgElementAttributeDefaults.js\";\nimport { transformValues } from \"../utils/createTransformValues.js\";\nimport { elementPropertiesForLinearGradient, elementPropertiesForRadialGradient } from \"../utils/elementPropertiesForGradient.js\";\nimport { imagePatternPropsForFill } from \"../utils/imagePatternPropsForFill.js\";\nimport { transformString } from \"../utils/transformString.js\";\nimport { LinearGradientElement, RadialGradientElement } from \"./GradientElement.js\";\nimport { ImagePatternElement } from \"./ImagePatternElement.js\";\nimport { Layer } from \"./Layer.js\";\nimport { SVGRoot } from \"./SVGRoot.js\";\n/**\n * @internal\n */\nexport const Vector = /* @__PURE__ */(() => {\n  return class VectorInner extends Layer {\n    static defaultVectorProps = {\n      isRootVectorNode: false,\n      name: null,\n      includeTransform: undefined,\n      defaultFillColor: undefined,\n      defaultStrokeColor: undefined,\n      defaultStrokeWidth: undefined,\n      defaultStrokeAlignment: \"center\",\n      width: 100,\n      height: 100,\n      rotation: 0,\n      rotate: undefined,\n      frame: undefined,\n      opacity: undefined,\n      calculatedPath: [],\n      d: undefined,\n      shapeId: undefined,\n      insideStroke: false,\n      strokeEnabled: true,\n      strokeClipId: undefined,\n      strokeWidth: undefined,\n      idAttribute: undefined,\n      transition: undefined,\n      shadows: [],\n      strokeAlpha: 1,\n      rect: {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      },\n      lineCap: \"butt\",\n      strokeColor: \"#0AF\",\n      lineJoin: \"miter\",\n      strokeMiterLimit: 4,\n      strokeDashArray: \"0\",\n      strokeDashOffset: 0,\n      fill: \"rgba(0,170,255,0.5)\"\n    };\n    static defaultProps = {\n      ...Layer.defaultProps,\n      ...VectorInner.defaultVectorProps\n    };\n    render() {\n      if (process.env.NODE_ENV !== \"production\" && safeWindow[\"perf\"]) safeWindow[\"perf\"].nodeRender();\n      const {\n        opacity,\n        calculatedPath,\n        d,\n        insideStroke,\n        shapeId,\n        strokeEnabled,\n        strokeClipId,\n        strokeWidth,\n        idAttribute,\n        rect,\n        shadows,\n        strokeAlpha,\n        name,\n        includeTransform,\n        isRootVectorNode,\n        rotation,\n        id,\n        lineCap,\n        lineJoin,\n        strokeColor,\n        strokeMiterLimit,\n        strokeDashArray,\n        strokeDashOffset,\n        fill,\n        variants,\n        transition\n      } = this.props;\n      // invisible shapes will result in these not being set, and should not be rendered\n      if (!id || !shapeId || !strokeClipId) return null;\n      const rotate = this.props.rotate ?? rotation ?? 0;\n      const {\n        target\n      } = RenderEnvironment;\n      /**\n       * @TODO For Vectors to animate smoothly in Generated Components, we\n       * need to reconsider how we set this transform. This transform needs to\n       * be set on changes for the image fill to update, but also used in an\n       * `initial` prop, and set by `variants` so that rotation animates. We\n       * also have to consider canvas performance.\n       */\n      const transform = transformValues(rect, rotate, isRootVectorNode, includeTransform);\n      let vectorFill;\n      let fillAlpha = 0;\n      let imagePattern;\n      let linearGradient;\n      let radialGradient;\n      if (typeof fill === \"string\" || Color.isColorObject(fill)) {\n        const fillColor = Color.isColorObject(fill) ? fill.initialValue || Color.toRgbString(fill) : fill;\n        if (fillColor !== \"transparent\") {\n          vectorFill = fillColor;\n          fillAlpha = ConvertColor.getAlpha(vectorFill);\n        }\n      } else if (LinearGradient.isLinearGradient(fill)) {\n        linearGradient = elementPropertiesForLinearGradient(fill, id);\n        vectorFill = `url(#${linearGradient.id})`;\n        fillAlpha = 1;\n      } else if (RadialGradient.isRadialGradient(fill)) {\n        radialGradient = elementPropertiesForRadialGradient(fill, id);\n        vectorFill = `url(#${radialGradient.id})`;\n        fillAlpha = 1;\n      } else if (BackgroundImage.isImageObject(fill)) {\n        imagePattern = imagePatternPropsForFill(fill, transform, id);\n        if (imagePattern) {\n          vectorFill = `url(#${imagePattern.id})`;\n          fillAlpha = 1;\n        }\n      }\n      if (vectorFill === svgElementAttributeDefaults.fill) {\n        vectorFill = undefined;\n      }\n      if (vectorFill === undefined) {\n        vectorFill = \"transparent\";\n      }\n      const fillEnabled = vectorFill !== undefined && vectorFill !== \"transparent\" && fillAlpha !== 0;\n      // If both fill and stroke are disabled, pretend thereâ€™s a fill for the shadow\n      if (!fillEnabled && !strokeEnabled) {\n        fillAlpha = 1;\n      }\n      let mainElement;\n      let strokeClipPath = null;\n      let shapeReference = null;\n      let strokeElement = null;\n      let pathTranslate;\n      let elementTransform;\n      const translatePaths = target === RenderTarget.export;\n      if (transform.rotation === 0 && translatePaths) {\n        pathTranslate = transform;\n      } else {\n        pathTranslate = {\n          x: 0,\n          y: 0\n        };\n        elementTransform = transformString(transform);\n      }\n      const pathAttributes = {\n        d: d ?? toSVGPath(calculatedPath, pathTranslate, target),\n        transform: elementTransform\n      };\n      // When used from the Preview, we need to revive BoxShadow instances:\n      const svgStrokeAttributes = {};\n      if (strokeEnabled && strokeWidth !== 0) {\n        svgStrokeAttributes.strokeWidth = strokeWidth;\n        svgStrokeAttributes.stroke = strokeColor;\n        svgStrokeAttributes.strokeLinecap = lineCap;\n        svgStrokeAttributes.strokeLinejoin = lineJoin;\n        if (lineJoin === \"miter\") {\n          svgStrokeAttributes.strokeMiterlimit = strokeMiterLimit;\n        }\n        svgStrokeAttributes.strokeDasharray = strokeDashArray;\n        if (strokeDashOffset !== 0) {\n          svgStrokeAttributes.strokeDashoffset = strokeDashOffset;\n        }\n      }\n      for (const key in svgElementAttributeDefaults) {\n        if (svgStrokeAttributes[key] === svgElementAttributeDefaults[key]) {\n          svgStrokeAttributes[key] = undefined;\n        }\n      }\n      const internalShapeId = InternalID.forKey(shapeId);\n      const internalStrokeClipId = InternalID.forKey(strokeClipId);\n      const shadow = shadowForShape(shadows, rect, internalShapeId, fillAlpha, strokeAlpha, strokeWidth, internalStrokeClipId, svgStrokeAttributes);\n      const currentName = target === RenderTarget.preview ? name || undefined : undefined;\n      if (shadow.insetElement !== null || shadow.outsetElement !== null || insideStroke) {\n        pathAttributes.id = internalShapeId.id;\n        shapeReference = React.createElement(motion.path, {\n          ...{\n            ...pathAttributes\n          },\n          variants: variants,\n          transition: transition\n        });\n        if (shadow.needsStrokeClip || insideStroke) {\n          strokeClipPath = React.createElement(\"clipPath\", {\n            id: internalStrokeClipId.id\n          }, React.createElement(\"use\", {\n            xlinkHref: internalShapeId.link\n          }));\n        }\n        if (shadow.insetElement !== null && strokeEnabled && strokeWidth && strokeWidth > 0) {\n          mainElement = React.createElement(\"use\", {\n            xlinkHref: internalShapeId.link,\n            fill: vectorFill,\n            strokeOpacity: \"0\",\n            name: currentName\n          });\n          strokeElement = React.createElement(\"use\", {\n            xlinkHref: internalShapeId.link,\n            clipPath: internalStrokeClipId.urlLink,\n            fill: \"transparent\",\n            ...svgStrokeAttributes,\n            strokeWidth: strokeWidth\n          });\n        } else {\n          mainElement = React.createElement(\"use\", {\n            xlinkHref: internalShapeId.link,\n            fill: vectorFill,\n            clipPath: internalStrokeClipId.urlLink,\n            ...svgStrokeAttributes,\n            strokeWidth: strokeWidth,\n            name: currentName\n          });\n        }\n      } else {\n        pathAttributes.id = idAttribute;\n        mainElement = React.createElement(motion.path, {\n          ...{\n            ...pathAttributes,\n            fill: vectorFill,\n            ...svgStrokeAttributes\n          },\n          name: currentName,\n          variants: variants,\n          transition: transition\n        });\n      }\n      const imagePatternElement = imagePattern ? React.createElement(ImagePatternElement, {\n        ...imagePattern\n      }) : undefined;\n      let gradient;\n      if (linearGradient) {\n        gradient = React.createElement(LinearGradientElement, {\n          ...linearGradient\n        });\n      } else if (radialGradient) {\n        gradient = React.createElement(RadialGradientElement, {\n          ...radialGradient\n        });\n      }\n      let defs = null;\n      if (shapeReference || strokeClipPath || shadow.definition && shadow.definition.length || gradient || imagePatternElement) {\n        defs = React.createElement(\"defs\", null, shapeReference, strokeClipPath, shadow.definition, gradient, imagePatternElement);\n      }\n      // Generated Components with variants require a default value to animate to/from.\n      const opacityValue = opacity ?? (variants ? 1 : undefined);\n      if (defs === null && shadow.outsetElement === null && shadow.insetElement === null && strokeElement === null) {\n        // Render the mainElement with opacity\n        mainElement = React.createElement(motion.path, {\n          ...{\n            ...pathAttributes,\n            fill: vectorFill,\n            ...svgStrokeAttributes\n          },\n          opacity: opacityValue,\n          variants: variants,\n          transition: transition,\n          name: currentName\n        });\n        // Don't group the main element if not needed:\n        return this.renderElement(mainElement);\n      } else {\n        return this.renderElement(React.createElement(motion.g, {\n          opacity: opacityValue,\n          variants: variants,\n          transition: transition\n        }, defs, shadow.outsetElement, mainElement, shadow.insetElement, strokeElement));\n      }\n    }\n    renderElement(element) {\n      const {\n        isRootVectorNode,\n        width,\n        height,\n        rect,\n        willChangeTransform,\n        includeTransform\n      } = this.props;\n      const frame = this.props.frame ?? rect ?? {\n        x: 0,\n        y: 0,\n        width: 100,\n        height: 100\n      };\n      if (!isRootVectorNode) return element;\n      if (includeTransform) return element;\n      /**\n       * @TODO For generated components, this <svg> wrapper needs to become a\n       * <motion.svg> and animate it's changes to width/height with layout,\n       * and translate x & y with variants.\n       */\n      return React.createElement(SVGRoot, {\n        frame: frame,\n        width: width,\n        height: height,\n        willChangeTransform: willChangeTransform,\n        innerRef: this.setLayerElement\n      }, element);\n    }\n  };\n})();","map":{"version":3,"names":["motion","process","React","InternalID","safeWindow","shadowForShape","toSVGPath","BackgroundImage","Color","ConvertColor","LinearGradient","RadialGradient","RenderEnvironment","RenderTarget","svgElementAttributeDefaults","transformValues","elementPropertiesForLinearGradient","elementPropertiesForRadialGradient","imagePatternPropsForFill","transformString","LinearGradientElement","RadialGradientElement","ImagePatternElement","Layer","SVGRoot","Vector","VectorInner","defaultVectorProps","isRootVectorNode","name","includeTransform","undefined","defaultFillColor","defaultStrokeColor","defaultStrokeWidth","defaultStrokeAlignment","width","height","rotation","rotate","frame","opacity","calculatedPath","d","shapeId","insideStroke","strokeEnabled","strokeClipId","strokeWidth","idAttribute","transition","shadows","strokeAlpha","rect","x","y","lineCap","strokeColor","lineJoin","strokeMiterLimit","strokeDashArray","strokeDashOffset","fill","defaultProps","render","env","NODE_ENV","nodeRender","id","variants","props","target","transform","vectorFill","fillAlpha","imagePattern","linearGradient","radialGradient","isColorObject","fillColor","initialValue","toRgbString","getAlpha","isLinearGradient","isRadialGradient","isImageObject","fillEnabled","mainElement","strokeClipPath","shapeReference","strokeElement","pathTranslate","elementTransform","translatePaths","export","pathAttributes","svgStrokeAttributes","stroke","strokeLinecap","strokeLinejoin","strokeMiterlimit","strokeDasharray","strokeDashoffset","key","internalShapeId","forKey","internalStrokeClipId","shadow","currentName","preview","insetElement","outsetElement","createElement","path","needsStrokeClip","xlinkHref","link","strokeOpacity","clipPath","urlLink","imagePatternElement","gradient","defs","definition","length","opacityValue","renderElement","g","element","willChangeTransform","innerRef","setLayerElement"],"sources":["../../../src/render/presentation/Vector.tsx"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}