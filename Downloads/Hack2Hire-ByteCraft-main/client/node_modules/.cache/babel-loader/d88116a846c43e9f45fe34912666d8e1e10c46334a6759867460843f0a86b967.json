{"ast":null,"code":"import { Color } from \"./Color.js\";\nimport { hsvToStr, stringToObject } from \"./converters.js\";\n/**\n * @internal\n */\nexport const ConvertColor = {\n  hueRotate: (color, angle) => {\n    return Color.toHslString(Color.hueRotate(Color(color), angle));\n  },\n  setAlpha: (color, alpha) => {\n    return Color.toRgbString(Color.alpha(Color(color), alpha));\n  },\n  getAlpha: color => {\n    const obj = stringToObject(color);\n    return obj ? obj.a : 1;\n  },\n  multiplyAlpha: (color, alpha) => {\n    return Color.toRgbString(Color.multiplyAlpha(Color(color), alpha));\n  },\n  toHex: color => {\n    return Color.toHexString(Color(color)).toUpperCase();\n  },\n  toRgb: color => {\n    return Color.toRgb(Color(color));\n  },\n  toRgbString: color => {\n    return Color.toRgbString(Color(color));\n  },\n  toHSV: color => {\n    return Color.toHsv(Color(color));\n  },\n  toHSL: color => {\n    return Color.toHsl(Color(color));\n  },\n  toHslString: color => {\n    return Color.toHslString(Color(color));\n  },\n  toHsvString: color => {\n    return Color.toHsvString(Color(color));\n  },\n  hsvToHSLString: hsv => {\n    return Color.toHslString(Color(hsvToStr(hsv.h, hsv.s, hsv.v, hsv.a)));\n  },\n  hsvToString: hsv => {\n    return hsvToStr(hsv.h, hsv.s, hsv.v);\n  },\n  rgbaToString: color => {\n    return Color.toRgbString(Color(color));\n  },\n  hslToString: hsl => {\n    return Color.toRgbString(Color(hsl));\n  },\n  toColorPickerSquare: h => {\n    return Color.toRgbString(Color({\n      h,\n      s: 1,\n      l: 0.5,\n      a: 1\n    }));\n  },\n  isValid: color => {\n    return Color(color).isValid !== false;\n  },\n  equals: (a, b) => {\n    if (typeof a === \"string\") {\n      a = Color(a);\n    }\n    if (typeof b === \"string\") {\n      b = Color(b);\n    }\n    return Color.equal(a, b);\n  },\n  toHexOrRgbaString: input => {\n    const color = Color(input);\n    return color.a !== 1 ? Color.toRgbString(color) : Color.toHexString(color);\n  }\n};","map":{"version":3,"names":["Color","hsvToStr","stringToObject","ConvertColor","hueRotate","color","angle","toHslString","setAlpha","alpha","toRgbString","getAlpha","obj","a","multiplyAlpha","toHex","toHexString","toUpperCase","toRgb","toHSV","toHsv","toHSL","toHsl","toHsvString","hsvToHSLString","hsv","h","s","v","hsvToString","rgbaToString","hslToString","hsl","toColorPickerSquare","l","isValid","equals","b","equal","toHexOrRgbaString","input"],"sources":["../../../../src/render/types/Color/ConvertColor.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}