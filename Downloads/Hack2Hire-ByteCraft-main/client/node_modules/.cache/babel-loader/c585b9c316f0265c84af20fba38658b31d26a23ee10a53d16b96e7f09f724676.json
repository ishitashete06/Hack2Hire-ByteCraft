{"ast":null,"code":"import { warnOnce } from \"../utils/warnOnce.js\";\nconst mockWithWarning = message => {\n  return () => {\n    warnOnce(message);\n  };\n};\n/** This stores the injected implementations */\nconst implementation = {\n  // We need a default implementation for useImageSource and useImageElement as it is used for rendering image backgrounds which would break otherwise.\n  // The default value is used for HTML export and when using the library without Framer.\n  useImageSource(image) {\n    return image.src ?? \"\";\n  },\n  useImageElement(image, rect, nodeId) {\n    const element = new Image();\n    element.src = runtime.useImageSource(image, rect, nodeId);\n    // srcSet doesn't need resolving via useImageSource, since these are\n    // currently only used in generated components, where resolution happens\n    // during code-generation.\n    if (image.srcSet) element.srcset = image.srcSet;\n    return element;\n  }\n};\nlet isRuntimeInjected = false;\nconst runtimeProxy = {\n  get(target, key, reciever) {\n    if (Reflect.has(target, key)) {\n      return Reflect.get(target, key, reciever);\n    }\n    if (isRuntimeInjected) {\n      return mockWithWarning(`${String(key)} is not available in this version of Framer.`);\n    } else {\n      return mockWithWarning(`${String(key)} is only available inside of Framer. https://www.framer.com/`);\n    }\n  }\n};\n/**\n * This proxy makes sure that any key on the runtime object will return a\n * function that logs a warning to the console. Functions for which a\n * implementation is provided are available through this object, e.g.\n * `runtime.addActionControls()`\n * @internal\n */\nexport const runtime = new Proxy(implementation, runtimeProxy);\n/**\n * This function is used by the `initializeRuntime()` function of the runtime to\n * provide the implementation of the functions defined in the `Runtime`\n * interface.\n * @internal\n */\nexport function _injectRuntime(injectedRuntime) {\n  Object.assign(implementation, injectedRuntime);\n  isRuntimeInjected = true;\n}","map":{"version":3,"names":["warnOnce","mockWithWarning","message","implementation","useImageSource","image","src","useImageElement","rect","nodeId","element","Image","runtime","srcSet","srcset","isRuntimeInjected","runtimeProxy","get","target","key","reciever","Reflect","has","String","Proxy","_injectRuntime","injectedRuntime","Object","assign"],"sources":["../../src/utils/runtimeInjection.ts"],"sourcesContent":[null],"mappings":"AAOA,SAASA,QAAQ,QAAQ,sBAAsB;AAkE/C,MAAMC,eAAe,GAAIC,OAAe,IAAI;EACxC,OAAO,MAAK;IACRF,QAAQ,CAACE,OAAO,CAAC;EACrB,CAAC;AACL,CAAC;AAED;AACA,MAAMC,cAAc,GAAqB;EACrC;EACA;EACAC,cAAcA,CAACC,KAAK;IAChB,OAAOA,KAAK,CAACC,GAAG,IAAI,EAAE;EAC1B,CAAC;EACDC,eAAeA,CAACF,KAAK,EAAEG,IAAI,EAAEC,MAAM;IAC/B,MAAMC,OAAO,GAAG,IAAIC,KAAK,EAAE;IAC3BD,OAAO,CAACJ,GAAG,GAAGM,OAAO,CAACR,cAAc,CAACC,KAAK,EAAEG,IAAI,EAAEC,MAAM,CAAC;IACzD;IACA;IACA;IACA,IAAIJ,KAAK,CAACQ,MAAM,EAAEH,OAAO,CAACI,MAAM,GAAGT,KAAK,CAACQ,MAAM;IAC/C,OAAOH,OAAO;EAClB;CACH;AAED,IAAIK,iBAAiB,GAAG,KAAK;AAC7B,MAAMC,YAAY,GAA0B;EACxCC,GAAGA,CAACC,MAAM,EAAEC,GAAG,EAAEC,QAAQ;IACrB,IAAIC,OAAO,CAACC,GAAG,CAACJ,MAAM,EAAEC,GAAG,CAAC,EAAE;MAC1B,OAAOE,OAAO,CAACJ,GAAG,CAACC,MAAM,EAAEC,GAAG,EAAEC,QAAQ,CAAC;;IAG7C,IAAIL,iBAAiB,EAAE;MACnB,OAAOd,eAAe,CAAC,GAAGsB,MAAM,CAACJ,GAAG,CAAC,8CAA8C,CAAC;KACvF,MAAM;MACH,OAAOlB,eAAe,CAAC,GAAGsB,MAAM,CAACJ,GAAG,CAAC,8DAA8D,CAAC;;EAE5G;CACH;AAED;;;;;;;AAOA,OAAO,MAAMP,OAAO,GAAY,IAAIY,KAAK,CAACrB,cAAyB,EAAEa,YAAY,CAAC;AAElF;;;;;;AAMA,OAAM,SAAUS,cAAcA,CAACC,eAAiC;EAC5DC,MAAM,CAACC,MAAM,CAACzB,cAAc,EAAEuB,eAAe,CAAC;EAC9CX,iBAAiB,GAAG,IAAI;AAC5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}